// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/provider/typeconvert"
	tfTypes "github.com/firehydrant/terraform-provider-firehydrant/internal/provider/types"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/operations"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SignalsAPIRuleDataSourceModel) RefreshFromSharedSignalsAPIRule(ctx context.Context, resp *shared.SignalsAPIRule) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.CreateIncidentConditionWhen = types.StringPointerValue(resp.CreateIncidentConditionWhen)
		r.CreatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.CreatedAt))
		if resp.CreatedBy == nil {
			r.CreatedBy = nil
		} else {
			r.CreatedBy = &tfTypes.NullableAuthor{}
			r.CreatedBy.Email = types.StringPointerValue(resp.CreatedBy.Email)
			r.CreatedBy.ID = types.StringPointerValue(resp.CreatedBy.ID)
			r.CreatedBy.Name = types.StringPointerValue(resp.CreatedBy.Name)
			r.CreatedBy.Source = types.StringPointerValue(resp.CreatedBy.Source)
		}
		r.DeduplicationExpiry = types.StringPointerValue(resp.DeduplicationExpiry)
		r.Expression = types.StringPointerValue(resp.Expression)
		r.ID = types.StringPointerValue(resp.ID)
		if resp.IncidentType == nil {
			r.IncidentType = nil
		} else {
			r.IncidentType = &tfTypes.NullableSuccinct{}
			r.IncidentType.ID = types.StringPointerValue(resp.IncidentType.ID)
			r.IncidentType.Name = types.StringPointerValue(resp.IncidentType.Name)
		}
		r.Name = types.StringPointerValue(resp.Name)
		r.NotificationPriorityOverride = types.StringPointerValue(resp.NotificationPriorityOverride)
		if resp.Target == nil {
			r.Target = nil
		} else {
			r.Target = &tfTypes.NullableSignalsAPITarget{}
			r.Target.ID = types.StringPointerValue(resp.Target.ID)
			r.Target.IsPageable = types.BoolPointerValue(resp.Target.IsPageable)
			r.Target.Name = types.StringPointerValue(resp.Target.Name)
			r.Target.TeamID = types.StringPointerValue(resp.Target.TeamID)
			r.Target.Type = types.StringPointerValue(resp.Target.Type)
		}
		r.TeamID = types.StringPointerValue(resp.TeamID)
		r.UpdatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.UpdatedAt))
	}

	return diags
}

func (r *SignalsAPIRuleDataSourceModel) ToOperationsGetTeamSignalRuleRequest(ctx context.Context) (*operations.GetTeamSignalRuleRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var teamID string
	teamID = r.TeamID.ValueString()

	var id string
	id = r.ID.ValueString()

	out := operations.GetTeamSignalRuleRequest{
		TeamID: teamID,
		ID:     id,
	}

	return &out, diags
}
