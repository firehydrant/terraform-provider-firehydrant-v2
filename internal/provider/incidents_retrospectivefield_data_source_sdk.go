// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/operations"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *IncidentsRetrospectiveFieldDataSourceModel) RefreshFromSharedIncidentsRetrospectiveField(ctx context.Context, resp *shared.IncidentsRetrospectiveField) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.HelpText = types.StringPointerValue(resp.HelpText)
		r.ID = types.StringPointerValue(resp.ID)
		r.IsRequired = types.BoolPointerValue(resp.IsRequired)
		r.Label = types.StringPointerValue(resp.Label)
		if resp.PermissibleValues != nil {
			r.PermissibleValues = make([]types.String, 0, len(resp.PermissibleValues))
			for _, v := range resp.PermissibleValues {
				r.PermissibleValues = append(r.PermissibleValues, types.StringValue(v))
			}
		}
		if resp.Schema != nil {
			r.Schema = make([]types.String, 0, len(resp.Schema))
			for _, v := range resp.Schema {
				r.Schema = append(r.Schema, types.StringValue(v))
			}
		}
		r.Type = types.StringPointerValue(resp.Type)
		r.Value = types.StringPointerValue(resp.Value)
	}

	return diags
}

func (r *IncidentsRetrospectiveFieldDataSourceModel) ToOperationsGetIncidentRetrospectiveFieldRequest(ctx context.Context) (*operations.GetIncidentRetrospectiveFieldRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var retrospectiveID string
	retrospectiveID = r.RetrospectiveID.ValueString()

	var fieldID string
	fieldID = r.FieldID.ValueString()

	var incidentID string
	incidentID = r.IncidentID.ValueString()

	out := operations.GetIncidentRetrospectiveFieldRequest{
		RetrospectiveID: retrospectiveID,
		FieldID:         fieldID,
		IncidentID:      incidentID,
	}

	return &out, diags
}
