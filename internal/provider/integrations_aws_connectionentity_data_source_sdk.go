// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/operations"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *IntegrationsAwsConnectionEntityDataSourceModel) ToOperationsGetAwsConnectionRequest(ctx context.Context) (*operations.GetAwsConnectionRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.GetAwsConnectionRequest{
		ID: id,
	}

	return &out, diags
}

func (r *IntegrationsAwsConnectionEntityDataSourceModel) RefreshFromSharedIntegrationsAwsConnectionEntity(ctx context.Context, resp *shared.IntegrationsAwsConnectionEntity) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.AwsAccountID = types.StringPointerValue(resp.AwsAccountID)
		r.ConnectionStatus = types.StringPointerValue(resp.ConnectionStatus)
		r.EnvironmentID = types.StringPointerValue(resp.EnvironmentID)
		r.EnvironmentName = types.StringPointerValue(resp.EnvironmentName)
		r.ExternalID = types.StringPointerValue(resp.ExternalID)
		r.ID = types.StringPointerValue(resp.ID)
		if resp.Regions != nil {
			r.Regions = make([]types.String, 0, len(resp.Regions))
			for _, v := range resp.Regions {
				r.Regions = append(r.Regions, types.StringValue(v))
			}
		}
		r.StatusDescription = types.StringPointerValue(resp.StatusDescription)
		r.StatusText = types.StringPointerValue(resp.StatusText)
		r.TargetArn = types.StringPointerValue(resp.TargetArn)
	}

	return diags
}
