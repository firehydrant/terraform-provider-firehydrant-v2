// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/operations"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
)

func (r *WebhooksEntitiesWebhookEntityResourceModel) ToSharedCreateWebhook(ctx context.Context) (*shared.CreateWebhook, diag.Diagnostics) {
	var diags diag.Diagnostics

	var url string
	url = r.URL.ValueString()

	out := shared.CreateWebhook{
		URL: url,
	}

	return &out, diags
}

func (r *WebhooksEntitiesWebhookEntityResourceModel) ToSharedUpdateWebhook(ctx context.Context) (*shared.UpdateWebhook, diag.Diagnostics) {
	var diags diag.Diagnostics

	state := new(string)
	if !r.State.IsUnknown() && !r.State.IsNull() {
		*state = r.State.ValueString()
	} else {
		state = nil
	}
	url := new(string)
	if !r.URL.IsUnknown() && !r.URL.IsNull() {
		*url = r.URL.ValueString()
	} else {
		url = nil
	}
	out := shared.UpdateWebhook{
		State: state,
		URL:   url,
	}

	return &out, diags
}

func (r *WebhooksEntitiesWebhookEntityResourceModel) ToOperationsUpdateWebhookRequest(ctx context.Context) (*operations.UpdateWebhookRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var webhookID string
	webhookID = r.ID.ValueString()

	updateWebhook, updateWebhookDiags := r.ToSharedUpdateWebhook(ctx)
	diags.Append(updateWebhookDiags...)

	if diags.HasError() {
		return nil, diags
	}

	out := operations.UpdateWebhookRequest{
		WebhookID:     webhookID,
		UpdateWebhook: *updateWebhook,
	}

	return &out, diags
}

func (r *WebhooksEntitiesWebhookEntityResourceModel) ToOperationsGetWebhookRequest(ctx context.Context) (*operations.GetWebhookRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var webhookID string
	webhookID = r.ID.ValueString()

	out := operations.GetWebhookRequest{
		WebhookID: webhookID,
	}

	return &out, diags
}
