// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	tfTypes "github.com/firehydrant/terraform-provider-firehydrant/internal/provider/types"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/operations"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SignalsAPITransposersEntitiesDataSourceModel) ToOperationsListSignalsEventSourcesRequest(ctx context.Context) (*operations.ListSignalsEventSourcesRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	teamID := new(string)
	if !r.TeamID.IsUnknown() && !r.TeamID.IsNull() {
		*teamID = r.TeamID.ValueString()
	} else {
		teamID = nil
	}
	escalationPolicyID := new(string)
	if !r.EscalationPolicyID.IsUnknown() && !r.EscalationPolicyID.IsNull() {
		*escalationPolicyID = r.EscalationPolicyID.ValueString()
	} else {
		escalationPolicyID = nil
	}
	onCallScheduleID := new(string)
	if !r.OnCallScheduleID.IsUnknown() && !r.OnCallScheduleID.IsNull() {
		*onCallScheduleID = r.OnCallScheduleID.ValueString()
	} else {
		onCallScheduleID = nil
	}
	userID := new(string)
	if !r.UserID.IsUnknown() && !r.UserID.IsNull() {
		*userID = r.UserID.ValueString()
	} else {
		userID = nil
	}
	out := operations.ListSignalsEventSourcesRequest{
		TeamID:             teamID,
		EscalationPolicyID: escalationPolicyID,
		OnCallScheduleID:   onCallScheduleID,
		UserID:             userID,
	}

	return &out, diags
}

func (r *SignalsAPITransposersEntitiesDataSourceModel) RefreshFromSharedSignalsAPITransposerListEntity(ctx context.Context, resp *shared.SignalsAPITransposerListEntity) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if resp.Data == nil {
			r.Data = nil
		} else {
			r.Data = &tfTypes.NullableSignalsAPITransposerEntity{}
			if resp.Data.CreatedBy == nil {
				r.Data.CreatedBy = nil
			} else {
				r.Data.CreatedBy = &tfTypes.NullableAuthorEntity{}
				r.Data.CreatedBy.Email = types.StringPointerValue(resp.Data.CreatedBy.Email)
				r.Data.CreatedBy.ID = types.StringPointerValue(resp.Data.CreatedBy.ID)
				r.Data.CreatedBy.Name = types.StringPointerValue(resp.Data.CreatedBy.Name)
				r.Data.CreatedBy.Source = types.StringPointerValue(resp.Data.CreatedBy.Source)
			}
			r.Data.Description = types.StringPointerValue(resp.Data.Description)
			r.Data.Editable = types.BoolPointerValue(resp.Data.Editable)
			if resp.Data.ExamplePayload == nil {
				r.Data.ExamplePayload = nil
			} else {
				r.Data.ExamplePayload = &tfTypes.NullableSignalsAPITransposerEntityExamplePayload{}
			}
			r.Data.Expected = types.StringPointerValue(resp.Data.Expected)
			r.Data.Expression = types.StringPointerValue(resp.Data.Expression)
			r.Data.IngestURL = types.StringPointerValue(resp.Data.IngestURL)
			r.Data.Name = types.StringPointerValue(resp.Data.Name)
			r.Data.Slug = types.StringPointerValue(resp.Data.Slug)
			if resp.Data.Tags != nil {
				r.Data.Tags = make([]types.String, 0, len(resp.Data.Tags))
				for _, v := range resp.Data.Tags {
					r.Data.Tags = append(r.Data.Tags, types.StringValue(v))
				}
			}
			if resp.Data.UpdatedBy == nil {
				r.Data.UpdatedBy = nil
			} else {
				r.Data.UpdatedBy = &tfTypes.NullableAuthorEntity{}
				r.Data.UpdatedBy.Email = types.StringPointerValue(resp.Data.UpdatedBy.Email)
				r.Data.UpdatedBy.ID = types.StringPointerValue(resp.Data.UpdatedBy.ID)
				r.Data.UpdatedBy.Name = types.StringPointerValue(resp.Data.UpdatedBy.Name)
				r.Data.UpdatedBy.Source = types.StringPointerValue(resp.Data.UpdatedBy.Source)
			}
			r.Data.Website = types.StringPointerValue(resp.Data.Website)
		}
	}

	return diags
}
