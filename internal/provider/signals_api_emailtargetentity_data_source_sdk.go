// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/provider/typeconvert"
	tfTypes "github.com/firehydrant/terraform-provider-firehydrant/internal/provider/types"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/operations"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SignalsAPIEmailTargetEntityDataSourceModel) ToOperationsGetSignalsEmailTargetRequest(ctx context.Context) (*operations.GetSignalsEmailTargetRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.GetSignalsEmailTargetRequest{
		ID: id,
	}

	return &out, diags
}

func (r *SignalsAPIEmailTargetEntityDataSourceModel) RefreshFromSharedSignalsAPIEmailTargetEntity(ctx context.Context, resp *shared.SignalsAPIEmailTargetEntity) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if resp.AllowedSenders != nil {
			r.AllowedSenders = make([]types.String, 0, len(resp.AllowedSenders))
			for _, v := range resp.AllowedSenders {
				r.AllowedSenders = append(r.AllowedSenders, types.StringValue(v))
			}
		}
		r.CreatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.CreatedAt))
		if resp.CreatedBy == nil {
			r.CreatedBy = nil
		} else {
			r.CreatedBy = &tfTypes.NullableAuthorEntity{}
			r.CreatedBy.Email = types.StringPointerValue(resp.CreatedBy.Email)
			r.CreatedBy.ID = types.StringPointerValue(resp.CreatedBy.ID)
			r.CreatedBy.Name = types.StringPointerValue(resp.CreatedBy.Name)
			r.CreatedBy.Source = types.StringPointerValue(resp.CreatedBy.Source)
		}
		r.Description = types.StringPointerValue(resp.Description)
		r.Email = types.StringPointerValue(resp.Email)
		r.ID = types.StringPointerValue(resp.ID)
		r.LevelCel = types.StringPointerValue(resp.LevelCel)
		r.Name = types.StringPointerValue(resp.Name)
		r.RuleMatchingStrategy = types.StringPointerValue(resp.RuleMatchingStrategy)
		if resp.Rules != nil {
			r.Rules = make([]types.String, 0, len(resp.Rules))
			for _, v := range resp.Rules {
				r.Rules = append(r.Rules, types.StringValue(v))
			}
		}
		r.Slug = types.StringPointerValue(resp.Slug)
		r.StatusCel = types.StringPointerValue(resp.StatusCel)
		if resp.Target == nil {
			r.Target = nil
		} else {
			r.Target = &tfTypes.NullableSignalsAPITargetEntity{}
			r.Target.ID = types.StringPointerValue(resp.Target.ID)
			r.Target.IsPageable = types.BoolPointerValue(resp.Target.IsPageable)
			r.Target.Name = types.StringPointerValue(resp.Target.Name)
			r.Target.TeamID = types.StringPointerValue(resp.Target.TeamID)
			r.Target.Type = types.StringPointerValue(resp.Target.Type)
		}
		r.TeamID = types.StringPointerValue(resp.TeamID)
		r.UpdatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.UpdatedAt))
	}

	return diags
}
