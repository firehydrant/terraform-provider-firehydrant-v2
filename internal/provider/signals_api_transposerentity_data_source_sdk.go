// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	tfTypes "github.com/firehydrant/terraform-provider-firehydrant/internal/provider/types"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/operations"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SignalsAPITransposerEntityDataSourceModel) ToOperationsGetSignalsEventSourceRequest(ctx context.Context) (*operations.GetSignalsEventSourceRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var transposerSlug string
	transposerSlug = r.Slug.ValueString()

	out := operations.GetSignalsEventSourceRequest{
		TransposerSlug: transposerSlug,
	}

	return &out, diags
}

func (r *SignalsAPITransposerEntityDataSourceModel) RefreshFromSharedSignalsAPITransposerEntity(ctx context.Context, resp *shared.SignalsAPITransposerEntity) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if resp.CreatedBy == nil {
			r.CreatedBy = nil
		} else {
			r.CreatedBy = &tfTypes.NullableAuthorEntity{}
			r.CreatedBy.Email = types.StringPointerValue(resp.CreatedBy.Email)
			r.CreatedBy.ID = types.StringPointerValue(resp.CreatedBy.ID)
			r.CreatedBy.Name = types.StringPointerValue(resp.CreatedBy.Name)
			r.CreatedBy.Source = types.StringPointerValue(resp.CreatedBy.Source)
		}
		r.Description = types.StringPointerValue(resp.Description)
		r.Editable = types.BoolPointerValue(resp.Editable)
		if resp.ExamplePayload == nil {
			r.ExamplePayload = nil
		} else {
			r.ExamplePayload = &tfTypes.SignalsAPITransposerEntityExamplePayload{}
		}
		r.Expected = types.StringPointerValue(resp.Expected)
		r.Expression = types.StringPointerValue(resp.Expression)
		r.IngestURL = types.StringPointerValue(resp.IngestURL)
		r.Name = types.StringPointerValue(resp.Name)
		r.Slug = types.StringPointerValue(resp.Slug)
		if resp.Tags != nil {
			r.Tags = make([]types.String, 0, len(resp.Tags))
			for _, v := range resp.Tags {
				r.Tags = append(r.Tags, types.StringValue(v))
			}
		}
		if resp.UpdatedBy == nil {
			r.UpdatedBy = nil
		} else {
			r.UpdatedBy = &tfTypes.NullableAuthorEntity{}
			r.UpdatedBy.Email = types.StringPointerValue(resp.UpdatedBy.Email)
			r.UpdatedBy.ID = types.StringPointerValue(resp.UpdatedBy.ID)
			r.UpdatedBy.Name = types.StringPointerValue(resp.UpdatedBy.Name)
			r.UpdatedBy.Source = types.StringPointerValue(resp.UpdatedBy.Source)
		}
		r.Website = types.StringPointerValue(resp.Website)
	}

	return diags
}
