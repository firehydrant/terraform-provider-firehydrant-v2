// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/operations"
	"github.com/hashicorp/terraform-plugin-framework/diag"
)

func (r *TicketingTicketsEntitiesDataSourceModel) ToOperationsListTicketsRequest(ctx context.Context) (*operations.ListTicketsRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	page := new(int)
	if !r.Page.IsUnknown() && !r.Page.IsNull() {
		*page = int(r.Page.ValueInt32())
	} else {
		page = nil
	}
	perPage := new(int)
	if !r.PerPage.IsUnknown() && !r.PerPage.IsNull() {
		*perPage = int(r.PerPage.ValueInt32())
	} else {
		perPage = nil
	}
	tags := new(string)
	if !r.Tags.IsUnknown() && !r.Tags.IsNull() {
		*tags = r.Tags.ValueString()
	} else {
		tags = nil
	}
	tagMatchStrategy := new(string)
	if !r.TagMatchStrategy.IsUnknown() && !r.TagMatchStrategy.IsNull() {
		*tagMatchStrategy = r.TagMatchStrategy.ValueString()
	} else {
		tagMatchStrategy = nil
	}
	assignedUser := new(string)
	if !r.AssignedUser.IsUnknown() && !r.AssignedUser.IsNull() {
		*assignedUser = r.AssignedUser.ValueString()
	} else {
		assignedUser = nil
	}
	state := new(string)
	if !r.State.IsUnknown() && !r.State.IsNull() {
		*state = r.State.ValueString()
	} else {
		state = nil
	}
	out := operations.ListTicketsRequest{
		Page:             page,
		PerPage:          perPage,
		Tags:             tags,
		TagMatchStrategy: tagMatchStrategy,
		AssignedUser:     assignedUser,
		State:            state,
	}

	return &out, diags
}
