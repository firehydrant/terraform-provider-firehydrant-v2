// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type GetV1IncidentsIncidentIDRetrospectivesRequest struct {
	Page    *int `queryParam:"style=form,explode=true,name=page"`
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// Filter by hidden status.
	IsHidden   *bool  `queryParam:"style=form,explode=true,name=is_hidden"`
	IncidentID string `pathParam:"style=simple,explode=false,name=incident_id"`
}

func (o *GetV1IncidentsIncidentIDRetrospectivesRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *GetV1IncidentsIncidentIDRetrospectivesRequest) GetPerPage() *int {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *GetV1IncidentsIncidentIDRetrospectivesRequest) GetIsHidden() *bool {
	if o == nil {
		return nil
	}
	return o.IsHidden
}

func (o *GetV1IncidentsIncidentIDRetrospectivesRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

type GetV1IncidentsIncidentIDRetrospectivesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Retrieve retrospectives attached to an incident
	IncidentsRetrospectiveEntityPaginated *shared.IncidentsRetrospectiveEntityPaginated
}

func (o *GetV1IncidentsIncidentIDRetrospectivesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetV1IncidentsIncidentIDRetrospectivesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetV1IncidentsIncidentIDRetrospectivesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetV1IncidentsIncidentIDRetrospectivesResponse) GetIncidentsRetrospectiveEntityPaginated() *shared.IncidentsRetrospectiveEntityPaginated {
	if o == nil {
		return nil
	}
	return o.IncidentsRetrospectiveEntityPaginated
}
