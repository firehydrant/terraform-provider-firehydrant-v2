// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type UpdateIncidentImpactPatchRequest struct {
	IncidentID                string                           `pathParam:"style=simple,explode=false,name=incident_id"`
	UpdateIncidentImpactPatch shared.UpdateIncidentImpactPatch `request:"mediaType=application/json"`
}

func (o *UpdateIncidentImpactPatchRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *UpdateIncidentImpactPatchRequest) GetUpdateIncidentImpactPatch() shared.UpdateIncidentImpactPatch {
	if o == nil {
		return shared.UpdateIncidentImpactPatch{}
	}
	return o.UpdateIncidentImpactPatch
}

type UpdateIncidentImpactPatchResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Allows updating an incident's impacted infrastructure, with the option to
	// move the incident into a different milestone and provide a note to update
	// the incident timeline and any attached status pages. If this method is
	// requested with the PUT verb, impacts will be completely replaced with the
	// information in the request body, even if not provided (effectively clearing
	// all impacts). If this method is requested with the PATCH verb, the provided
	// impacts will be added or updated, but no impacts will be removed.
	//
	Incident *shared.Incident
}

func (o *UpdateIncidentImpactPatchResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateIncidentImpactPatchResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateIncidentImpactPatchResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateIncidentImpactPatchResponse) GetIncident() *shared.Incident {
	if o == nil {
		return nil
	}
	return o.Incident
}
