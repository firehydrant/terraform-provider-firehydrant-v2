// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type Type string

const (
	TypeText              Type = "text"
	TypeSingleSelect      Type = "single_select"
	TypeMultiSelect       Type = "multi_select"
	TypeNumeric           Type = "numeric"
	TypeDatetime          Type = "datetime"
	TypeDynamicInputGroup Type = "dynamic_input_group"
	TypeMarkdown          Type = "markdown"
	TypeMarkdownText      Type = "markdown_text"
)

func (e Type) ToPointer() *Type {
	return &e
}
func (e *Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		fallthrough
	case "single_select":
		fallthrough
	case "multi_select":
		fallthrough
	case "numeric":
		fallthrough
	case "datetime":
		fallthrough
	case "dynamic_input_group":
		fallthrough
	case "markdown":
		fallthrough
	case "markdown_text":
		*e = Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Type: %v", v)
	}
}

type PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody struct {
	Label             string   `json:"label"`
	Type              Type     `json:"type"`
	HelpText          *string  `json:"help_text,omitempty"`
	PermissibleValues []string `json:"permissible_values,omitempty"`
	IsRequired        *bool    `json:"is_required,omitempty"`
	Schema            []string `json:"schema,omitempty"`
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody) GetType() Type {
	if o == nil {
		return Type("")
	}
	return o.Type
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody) GetHelpText() *string {
	if o == nil {
		return nil
	}
	return o.HelpText
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody) GetPermissibleValues() []string {
	if o == nil {
		return nil
	}
	return o.PermissibleValues
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody) GetIsRequired() *bool {
	if o == nil {
		return nil
	}
	return o.IsRequired
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody) GetSchema() []string {
	if o == nil {
		return nil
	}
	return o.Schema
}

type PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequest struct {
	RetrospectiveID string                                                                   `pathParam:"style=simple,explode=false,name=retrospective_id"`
	IncidentID      string                                                                   `pathParam:"style=simple,explode=false,name=incident_id"`
	RequestBody     PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody `request:"mediaType=application/json"`
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequest) GetRetrospectiveID() string {
	if o == nil {
		return ""
	}
	return o.RetrospectiveID
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequest) GetRequestBody() PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody {
	if o == nil {
		return PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsRequestBody{}
	}
	return o.RequestBody
}

type PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Add a new field to an incident retrospective
	IncidentsRetrospectiveFieldEntity *shared.IncidentsRetrospectiveFieldEntity
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchV1IncidentsIncidentIDRetrospectivesRetrospectiveIDFieldsResponse) GetIncidentsRetrospectiveFieldEntity() *shared.IncidentsRetrospectiveFieldEntity {
	if o == nil {
		return nil
	}
	return o.IncidentsRetrospectiveFieldEntity
}
