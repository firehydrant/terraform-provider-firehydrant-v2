// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type ListTicketsRequest struct {
	Page    *int `queryParam:"style=form,explode=true,name=page"`
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// A comma separated list of tags
	Tags *string `queryParam:"style=form,explode=true,name=tags"`
	// A matching strategy for the tags provided
	TagMatchStrategy *string `queryParam:"style=form,explode=true,name=tag_match_strategy"`
	// Filter tickets assigned to this user id
	AssignedUser *string `queryParam:"style=form,explode=true,name=assigned_user"`
	// Filter tickets by state
	State *string `queryParam:"style=form,explode=true,name=state"`
}

func (o *ListTicketsRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListTicketsRequest) GetPerPage() *int {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *ListTicketsRequest) GetTags() *string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *ListTicketsRequest) GetTagMatchStrategy() *string {
	if o == nil {
		return nil
	}
	return o.TagMatchStrategy
}

func (o *ListTicketsRequest) GetAssignedUser() *string {
	if o == nil {
		return nil
	}
	return o.AssignedUser
}

func (o *ListTicketsRequest) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

type ListTicketsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List all of the tickets that have been added to the organiation
	TicketingTicketEntity *shared.TicketingTicketEntity
}

func (o *ListTicketsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListTicketsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListTicketsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListTicketsResponse) GetTicketingTicketEntity() *shared.TicketingTicketEntity {
	if o == nil {
		return nil
	}
	return o.TicketingTicketEntity
}
