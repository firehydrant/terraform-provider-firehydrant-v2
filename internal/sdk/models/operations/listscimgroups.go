// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListScimGroupsRequest struct {
	StartIndex *int `queryParam:"style=form,explode=true,name=startIndex"`
	Count      *int `queryParam:"style=form,explode=true,name=count"`
	// This is a string used to query groups by displayName.
	//         Proper example syntax for this would be `?filter=displayName eq "My Team Name"`.
	//         Currently we only support the `eq` operator
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
}

func (o *ListScimGroupsRequest) GetStartIndex() *int {
	if o == nil {
		return nil
	}
	return o.StartIndex
}

func (o *ListScimGroupsRequest) GetCount() *int {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListScimGroupsRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

type ListScimGroupsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListScimGroupsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListScimGroupsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListScimGroupsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
