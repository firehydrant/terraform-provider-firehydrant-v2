// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

// PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate - The setting for auto-assigning the milestone's timestamp during incident declaration
type PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate string

const (
	PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreateAlwaysSetOnCreate     PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate = "always_set_on_create"
	PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreateOnlySetOnManualCreate PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate = "only_set_on_manual_create"
	PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreateNeverSetOnCreate      PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate = "never_set_on_create"
)

func (e PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate) ToPointer() *PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate {
	return &e
}
func (e *PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "always_set_on_create":
		fallthrough
	case "only_set_on_manual_create":
		fallthrough
	case "never_set_on_create":
		*e = PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate: %v", v)
	}
}

type PatchV1LifecyclesMilestonesMilestoneIDRequestBody struct {
	// The name of the milestone
	Name *string `json:"name,omitempty"`
	// A long-form description of the milestone's purpose
	Description *string `json:"description,omitempty"`
	// A unique identifier for the milestone. If not provided, one will be generated from the name.
	Slug *string `json:"slug,omitempty"`
	// The position of the milestone within the phase. If not provided, the milestone will be added as the last milestone in the phase.
	Position *int `json:"position,omitempty"`
	// The ID of a later milestone that cannot be started until this milestone has a timestamp populated
	RequiredAtMilestoneID *string `json:"required_at_milestone_id,omitempty"`
	// The setting for auto-assigning the milestone's timestamp during incident declaration
	AutoAssignTimestampOnCreate *PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate `json:"auto_assign_timestamp_on_create,omitempty"`
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDRequestBody) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDRequestBody) GetPosition() *int {
	if o == nil {
		return nil
	}
	return o.Position
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDRequestBody) GetRequiredAtMilestoneID() *string {
	if o == nil {
		return nil
	}
	return o.RequiredAtMilestoneID
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDRequestBody) GetAutoAssignTimestampOnCreate() *PatchV1LifecyclesMilestonesMilestoneIDAutoAssignTimestampOnCreate {
	if o == nil {
		return nil
	}
	return o.AutoAssignTimestampOnCreate
}

type PatchV1LifecyclesMilestonesMilestoneIDRequest struct {
	MilestoneID string                                             `pathParam:"style=simple,explode=false,name=milestone_id"`
	RequestBody *PatchV1LifecyclesMilestonesMilestoneIDRequestBody `request:"mediaType=application/json"`
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDRequest) GetMilestoneID() string {
	if o == nil {
		return ""
	}
	return o.MilestoneID
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDRequest) GetRequestBody() *PatchV1LifecyclesMilestonesMilestoneIDRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type PatchV1LifecyclesMilestonesMilestoneIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Update a milestone
	LifecyclesPhaseEntity *shared.LifecyclesPhaseEntity
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchV1LifecyclesMilestonesMilestoneIDResponse) GetLifecyclesPhaseEntity() *shared.LifecyclesPhaseEntity {
	if o == nil {
		return nil
	}
	return o.LifecyclesPhaseEntity
}
