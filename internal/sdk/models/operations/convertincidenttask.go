// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type ConvertIncidentTaskRequest struct {
	TaskID              string                     `pathParam:"style=simple,explode=false,name=task_id"`
	IncidentID          string                     `pathParam:"style=simple,explode=false,name=incident_id"`
	ConvertIncidentTask shared.ConvertIncidentTask `request:"mediaType=application/json"`
}

func (o *ConvertIncidentTaskRequest) GetTaskID() string {
	if o == nil {
		return ""
	}
	return o.TaskID
}

func (o *ConvertIncidentTaskRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *ConvertIncidentTaskRequest) GetConvertIncidentTask() shared.ConvertIncidentTask {
	if o == nil {
		return shared.ConvertIncidentTask{}
	}
	return o.ConvertIncidentTask
}

type ConvertIncidentTaskResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Convert a task to a follow-up
	TaskEntityPaginated *shared.TaskEntityPaginated
}

func (o *ConvertIncidentTaskResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ConvertIncidentTaskResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ConvertIncidentTaskResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ConvertIncidentTaskResponse) GetTaskEntityPaginated() *shared.TaskEntityPaginated {
	if o == nil {
		return nil
	}
	return o.TaskEntityPaginated
}
