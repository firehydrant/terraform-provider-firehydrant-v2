// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateTranscriptAttributionRequestBody struct {
	// The speaker to attribute the transcript to.
	FromSpeaker *string `json:"from_speaker,omitempty"`
	// The user to attribute the transcript to.
	FromUserID *string `json:"from_user_id,omitempty"`
	// The ID of the user to attribute the transcript to.
	ToUserID string `json:"to_user_id"`
	// The ID of the specific transcript entry to change attribution for.
	TranscriptID *string `json:"transcript_id,omitempty"`
	// The ID of the conference bridge to attribute the transcript to.
	ConferenceBridgeID *string `json:"conference_bridge_id,omitempty"`
}

func (o *UpdateTranscriptAttributionRequestBody) GetFromSpeaker() *string {
	if o == nil {
		return nil
	}
	return o.FromSpeaker
}

func (o *UpdateTranscriptAttributionRequestBody) GetFromUserID() *string {
	if o == nil {
		return nil
	}
	return o.FromUserID
}

func (o *UpdateTranscriptAttributionRequestBody) GetToUserID() string {
	if o == nil {
		return ""
	}
	return o.ToUserID
}

func (o *UpdateTranscriptAttributionRequestBody) GetTranscriptID() *string {
	if o == nil {
		return nil
	}
	return o.TranscriptID
}

func (o *UpdateTranscriptAttributionRequestBody) GetConferenceBridgeID() *string {
	if o == nil {
		return nil
	}
	return o.ConferenceBridgeID
}

type UpdateTranscriptAttributionRequest struct {
	IncidentID  string                                 `pathParam:"style=simple,explode=false,name=incident_id"`
	RequestBody UpdateTranscriptAttributionRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateTranscriptAttributionRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *UpdateTranscriptAttributionRequest) GetRequestBody() UpdateTranscriptAttributionRequestBody {
	if o == nil {
		return UpdateTranscriptAttributionRequestBody{}
	}
	return o.RequestBody
}

type UpdateTranscriptAttributionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *UpdateTranscriptAttributionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateTranscriptAttributionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateTranscriptAttributionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
