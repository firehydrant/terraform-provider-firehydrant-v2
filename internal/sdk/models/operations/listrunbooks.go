// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type ListRunbooksRequest struct {
	Page    *int `queryParam:"style=form,explode=true,name=page"`
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// A query to search runbooks by their name
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// A query to search runbooks by their owners
	Owners *string `queryParam:"style=form,explode=true,name=owners"`
	// Sort runbooks by their updated date. Accepts 'asc', 'desc'. This parameter is deprecated in favor of 'order_by' and 'order_direction'.
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Sort runbooks by their updated date or name. Accepts 'updated_at', 'name', and 'created_at'.
	OrderBy *string `queryParam:"style=form,explode=true,name=order_by"`
	// Allows assigning a direction to how the specified `order_by` parameter is sorted. This parameter must be paired with `order_by` and does nothing on its own.
	OrderDirection *string `queryParam:"style=form,explode=true,name=order_direction"`
}

func (o *ListRunbooksRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListRunbooksRequest) GetPerPage() *int {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *ListRunbooksRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListRunbooksRequest) GetOwners() *string {
	if o == nil {
		return nil
	}
	return o.Owners
}

func (o *ListRunbooksRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListRunbooksRequest) GetOrderBy() *string {
	if o == nil {
		return nil
	}
	return o.OrderBy
}

func (o *ListRunbooksRequest) GetOrderDirection() *string {
	if o == nil {
		return nil
	}
	return o.OrderDirection
}

type ListRunbooksResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Lists all available runbooks.
	Runbook *shared.Runbook
}

func (o *ListRunbooksResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListRunbooksResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListRunbooksResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListRunbooksResponse) GetRunbook() *shared.Runbook {
	if o == nil {
		return nil
	}
	return o.Runbook
}
