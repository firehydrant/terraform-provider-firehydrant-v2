// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type UpdateIncidentAlertPrimaryRequest struct {
	IncidentAlertID            string                            `pathParam:"style=simple,explode=false,name=incident_alert_id"`
	IncidentID                 string                            `pathParam:"style=simple,explode=false,name=incident_id"`
	UpdateIncidentAlertPrimary shared.UpdateIncidentAlertPrimary `request:"mediaType=application/json"`
}

func (o *UpdateIncidentAlertPrimaryRequest) GetIncidentAlertID() string {
	if o == nil {
		return ""
	}
	return o.IncidentAlertID
}

func (o *UpdateIncidentAlertPrimaryRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *UpdateIncidentAlertPrimaryRequest) GetUpdateIncidentAlertPrimary() shared.UpdateIncidentAlertPrimary {
	if o == nil {
		return shared.UpdateIncidentAlertPrimary{}
	}
	return o.UpdateIncidentAlertPrimary
}

type UpdateIncidentAlertPrimaryResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Setting an alert as primary will overwrite milestone times in the FireHydrant incident with times included in the primary alert. Services attached to the primary alert will also be automatically added to the incident.
	IncidentsAlertEntity *shared.IncidentsAlertEntity
}

func (o *UpdateIncidentAlertPrimaryResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateIncidentAlertPrimaryResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateIncidentAlertPrimaryResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateIncidentAlertPrimaryResponse) GetIncidentsAlertEntity() *shared.IncidentsAlertEntity {
	if o == nil {
		return nil
	}
	return o.IncidentsAlertEntity
}
