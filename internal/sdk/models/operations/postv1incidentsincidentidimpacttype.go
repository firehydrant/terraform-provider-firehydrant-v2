// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type PostV1IncidentsIncidentIDImpactTypePathParamType string

const (
	PostV1IncidentsIncidentIDImpactTypePathParamTypeEnvironments    PostV1IncidentsIncidentIDImpactTypePathParamType = "environments"
	PostV1IncidentsIncidentIDImpactTypePathParamTypeFunctionalities PostV1IncidentsIncidentIDImpactTypePathParamType = "functionalities"
	PostV1IncidentsIncidentIDImpactTypePathParamTypeServices        PostV1IncidentsIncidentIDImpactTypePathParamType = "services"
	PostV1IncidentsIncidentIDImpactTypePathParamTypeCustomers       PostV1IncidentsIncidentIDImpactTypePathParamType = "customers"
)

func (e PostV1IncidentsIncidentIDImpactTypePathParamType) ToPointer() *PostV1IncidentsIncidentIDImpactTypePathParamType {
	return &e
}
func (e *PostV1IncidentsIncidentIDImpactTypePathParamType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environments":
		fallthrough
	case "functionalities":
		fallthrough
	case "services":
		fallthrough
	case "customers":
		*e = PostV1IncidentsIncidentIDImpactTypePathParamType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostV1IncidentsIncidentIDImpactTypePathParamType: %v", v)
	}
}

type PostV1IncidentsIncidentIDImpactTypeRequest struct {
	IncidentID                          string                                           `pathParam:"style=simple,explode=false,name=incident_id"`
	Type                                PostV1IncidentsIncidentIDImpactTypePathParamType `pathParam:"style=simple,explode=false,name=type"`
	PostV1IncidentsIncidentIDImpactType shared.PostV1IncidentsIncidentIDImpactType       `request:"mediaType=application/json"`
}

func (o *PostV1IncidentsIncidentIDImpactTypeRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *PostV1IncidentsIncidentIDImpactTypeRequest) GetType() PostV1IncidentsIncidentIDImpactTypePathParamType {
	if o == nil {
		return PostV1IncidentsIncidentIDImpactTypePathParamType("")
	}
	return o.Type
}

func (o *PostV1IncidentsIncidentIDImpactTypeRequest) GetPostV1IncidentsIncidentIDImpactType() shared.PostV1IncidentsIncidentIDImpactType {
	if o == nil {
		return shared.PostV1IncidentsIncidentIDImpactType{}
	}
	return o.PostV1IncidentsIncidentIDImpactType
}

type PostV1IncidentsIncidentIDImpactTypeResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Add impacted infrastructure to an incident
	IncidentImpactEntity *shared.IncidentImpactEntity
	// Bad Request
	ErrorEntity *shared.ErrorEntity
}

func (o *PostV1IncidentsIncidentIDImpactTypeResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostV1IncidentsIncidentIDImpactTypeResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostV1IncidentsIncidentIDImpactTypeResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PostV1IncidentsIncidentIDImpactTypeResponse) GetIncidentImpactEntity() *shared.IncidentImpactEntity {
	if o == nil {
		return nil
	}
	return o.IncidentImpactEntity
}

func (o *PostV1IncidentsIncidentIDImpactTypeResponse) GetErrorEntity() *shared.ErrorEntity {
	if o == nil {
		return nil
	}
	return o.ErrorEntity
}
