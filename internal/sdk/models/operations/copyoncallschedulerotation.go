// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type CopyOnCallScheduleRotationRequest struct {
	RotationID                 string                            `pathParam:"style=simple,explode=false,name=rotation_id"`
	TeamID                     string                            `pathParam:"style=simple,explode=false,name=team_id"`
	ScheduleID                 string                            `pathParam:"style=simple,explode=false,name=schedule_id"`
	CopyOnCallScheduleRotation shared.CopyOnCallScheduleRotation `request:"mediaType=application/json"`
}

func (o *CopyOnCallScheduleRotationRequest) GetRotationID() string {
	if o == nil {
		return ""
	}
	return o.RotationID
}

func (o *CopyOnCallScheduleRotationRequest) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *CopyOnCallScheduleRotationRequest) GetScheduleID() string {
	if o == nil {
		return ""
	}
	return o.ScheduleID
}

func (o *CopyOnCallScheduleRotationRequest) GetCopyOnCallScheduleRotation() shared.CopyOnCallScheduleRotation {
	if o == nil {
		return shared.CopyOnCallScheduleRotation{}
	}
	return o.CopyOnCallScheduleRotation
}

type CopyOnCallScheduleRotationResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Copy an on-call rotation into a different schedule, allowing you to merge them together safely.
	SignalsAPIOnCallRotation *shared.SignalsAPIOnCallRotation
}

func (o *CopyOnCallScheduleRotationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CopyOnCallScheduleRotationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CopyOnCallScheduleRotationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CopyOnCallScheduleRotationResponse) GetSignalsAPIOnCallRotation() *shared.SignalsAPIOnCallRotation {
	if o == nil {
		return nil
	}
	return o.SignalsAPIOnCallRotation
}
