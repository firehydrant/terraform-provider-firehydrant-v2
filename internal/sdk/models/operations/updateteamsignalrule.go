// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type UpdateTeamSignalRuleRequest struct {
	TeamID               string                      `pathParam:"style=simple,explode=false,name=team_id"`
	ID                   string                      `pathParam:"style=simple,explode=false,name=id"`
	UpdateTeamSignalRule shared.UpdateTeamSignalRule `request:"mediaType=application/json"`
}

func (o *UpdateTeamSignalRuleRequest) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *UpdateTeamSignalRuleRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateTeamSignalRuleRequest) GetUpdateTeamSignalRule() shared.UpdateTeamSignalRule {
	if o == nil {
		return shared.UpdateTeamSignalRule{}
	}
	return o.UpdateTeamSignalRule
}

type UpdateTeamSignalRuleResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Update a Signals rule by ID
	SignalsAPIRule *shared.SignalsAPIRule
}

func (o *UpdateTeamSignalRuleResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateTeamSignalRuleResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateTeamSignalRuleResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateTeamSignalRuleResponse) GetSignalsAPIRule() *shared.SignalsAPIRule {
	if o == nil {
		return nil
	}
	return o.SignalsAPIRule
}
