// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type GetServiceDependenciesRequest struct {
	ServiceID string `pathParam:"style=simple,explode=false,name=service_id"`
	// If true, returns all dependencies in one array. If false, splits dependencies into different arrays for child and parent dependencies
	Flatten *bool `queryParam:"style=form,explode=true,name=flatten"`
}

func (o *GetServiceDependenciesRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *GetServiceDependenciesRequest) GetFlatten() *bool {
	if o == nil {
		return nil
	}
	return o.Flatten
}

type GetServiceDependenciesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Retrieves a service's dependencies
	ServiceWithAllDependencies *shared.ServiceWithAllDependencies
}

func (o *GetServiceDependenciesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetServiceDependenciesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetServiceDependenciesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetServiceDependenciesResponse) GetServiceWithAllDependencies() *shared.ServiceWithAllDependencies {
	if o == nil {
		return nil
	}
	return o.ServiceWithAllDependencies
}
