// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

// GetV1EntitlementsQueryParamType - Type of Entitlement
type GetV1EntitlementsQueryParamType string

const (
	GetV1EntitlementsQueryParamTypeQuota  GetV1EntitlementsQueryParamType = "quota"
	GetV1EntitlementsQueryParamTypeAccess GetV1EntitlementsQueryParamType = "access"
)

func (e GetV1EntitlementsQueryParamType) ToPointer() *GetV1EntitlementsQueryParamType {
	return &e
}
func (e *GetV1EntitlementsQueryParamType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "quota":
		fallthrough
	case "access":
		*e = GetV1EntitlementsQueryParamType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV1EntitlementsQueryParamType: %v", v)
	}
}

type GetV1EntitlementsRequest struct {
	// Name of Entitlement
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Type of Entitlement
	Type *GetV1EntitlementsQueryParamType `queryParam:"style=form,explode=true,name=type"`
}

func (o *GetV1EntitlementsRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetV1EntitlementsRequest) GetType() *GetV1EntitlementsQueryParamType {
	if o == nil {
		return nil
	}
	return o.Type
}

type GetV1EntitlementsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Retrieve all entitlements
	EntitlementEntityPaginated *shared.EntitlementEntityPaginated
}

func (o *GetV1EntitlementsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetV1EntitlementsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetV1EntitlementsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetV1EntitlementsResponse) GetEntitlementEntityPaginated() *shared.EntitlementEntityPaginated {
	if o == nil {
		return nil
	}
	return o.EntitlementEntityPaginated
}
