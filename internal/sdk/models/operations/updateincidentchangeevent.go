// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type UpdateIncidentChangeEventRequest struct {
	RelatedChangeEventID      string                           `pathParam:"style=simple,explode=false,name=related_change_event_id"`
	IncidentID                string                           `pathParam:"style=simple,explode=false,name=incident_id"`
	UpdateIncidentChangeEvent shared.UpdateIncidentChangeEvent `request:"mediaType=application/json"`
}

func (o *UpdateIncidentChangeEventRequest) GetRelatedChangeEventID() string {
	if o == nil {
		return ""
	}
	return o.RelatedChangeEventID
}

func (o *UpdateIncidentChangeEventRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *UpdateIncidentChangeEventRequest) GetUpdateIncidentChangeEvent() shared.UpdateIncidentChangeEvent {
	if o == nil {
		return shared.UpdateIncidentChangeEvent{}
	}
	return o.UpdateIncidentChangeEvent
}

type UpdateIncidentChangeEventResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Update a change attached to an incident
	IncidentsRelatedChangeEventEntity *shared.IncidentsRelatedChangeEventEntity
	// Bad Request
	ErrorEntity *shared.ErrorEntity
}

func (o *UpdateIncidentChangeEventResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateIncidentChangeEventResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateIncidentChangeEventResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateIncidentChangeEventResponse) GetIncidentsRelatedChangeEventEntity() *shared.IncidentsRelatedChangeEventEntity {
	if o == nil {
		return nil
	}
	return o.IncidentsRelatedChangeEventEntity
}

func (o *UpdateIncidentChangeEventResponse) GetErrorEntity() *shared.ErrorEntity {
	if o == nil {
		return nil
	}
	return o.ErrorEntity
}
