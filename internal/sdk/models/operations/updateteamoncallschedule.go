// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type UpdateTeamOnCallScheduleRequest struct {
	TeamID                   string                          `pathParam:"style=simple,explode=false,name=team_id"`
	ScheduleID               string                          `pathParam:"style=simple,explode=false,name=schedule_id"`
	UpdateTeamOnCallSchedule shared.UpdateTeamOnCallSchedule `request:"mediaType=application/json"`
}

func (o *UpdateTeamOnCallScheduleRequest) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *UpdateTeamOnCallScheduleRequest) GetScheduleID() string {
	if o == nil {
		return ""
	}
	return o.ScheduleID
}

func (o *UpdateTeamOnCallScheduleRequest) GetUpdateTeamOnCallSchedule() shared.UpdateTeamOnCallSchedule {
	if o == nil {
		return shared.UpdateTeamOnCallSchedule{}
	}
	return o.UpdateTeamOnCallSchedule
}

type UpdateTeamOnCallScheduleResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Update a Signals on-call schedule by ID. For backwards compatibility, all parameters except for
	// `name` and `description` will be ignored if the schedule has more than one rotation. If the schedule
	// has only one rotation, you can continue to update that rotation using the rotation-specific parameters.
	//
	SignalsAPIOnCallSchedule *shared.SignalsAPIOnCallSchedule
}

func (o *UpdateTeamOnCallScheduleResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateTeamOnCallScheduleResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateTeamOnCallScheduleResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateTeamOnCallScheduleResponse) GetSignalsAPIOnCallSchedule() *shared.SignalsAPIOnCallSchedule {
	if o == nil {
		return nil
	}
	return o.SignalsAPIOnCallSchedule
}
