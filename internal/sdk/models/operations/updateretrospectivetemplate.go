// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type UpdateRetrospectiveTemplateRequestBody struct {
	Description             *string  `json:"description,omitempty"`
	FieldsHelpText          []string `json:"fields[help_text],omitempty"`
	FieldsID                []string `json:"fields[id],omitempty"`
	FieldsIsRequired        []bool   `json:"fields[is_required],omitempty"`
	FieldsLabel             []string `json:"fields[label]"`
	FieldsPermissibleValues []string `json:"fields[permissible_values],omitempty"`
	FieldsSchema            []string `json:"fields[schema],omitempty"`
	FieldsType              []string `json:"fields[type]"`
	IsDefault               *bool    `json:"is_default,omitempty"`
	Name                    *string  `json:"name,omitempty"`
	SectionsElements        []string `json:"sections[elements]"`
	SectionsSlug            []string `json:"sections[slug]"`
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetFieldsHelpText() []string {
	if o == nil {
		return nil
	}
	return o.FieldsHelpText
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetFieldsID() []string {
	if o == nil {
		return nil
	}
	return o.FieldsID
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetFieldsIsRequired() []bool {
	if o == nil {
		return nil
	}
	return o.FieldsIsRequired
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetFieldsLabel() []string {
	if o == nil {
		return []string{}
	}
	return o.FieldsLabel
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetFieldsPermissibleValues() []string {
	if o == nil {
		return nil
	}
	return o.FieldsPermissibleValues
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetFieldsSchema() []string {
	if o == nil {
		return nil
	}
	return o.FieldsSchema
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetFieldsType() []string {
	if o == nil {
		return []string{}
	}
	return o.FieldsType
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetIsDefault() *bool {
	if o == nil {
		return nil
	}
	return o.IsDefault
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetSectionsElements() []string {
	if o == nil {
		return []string{}
	}
	return o.SectionsElements
}

func (o *UpdateRetrospectiveTemplateRequestBody) GetSectionsSlug() []string {
	if o == nil {
		return []string{}
	}
	return o.SectionsSlug
}

type UpdateRetrospectiveTemplateRequest struct {
	RetrospectiveTemplateID string                                 `pathParam:"style=simple,explode=false,name=retrospective_template_id"`
	RequestBody             UpdateRetrospectiveTemplateRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateRetrospectiveTemplateRequest) GetRetrospectiveTemplateID() string {
	if o == nil {
		return ""
	}
	return o.RetrospectiveTemplateID
}

func (o *UpdateRetrospectiveTemplateRequest) GetRequestBody() UpdateRetrospectiveTemplateRequestBody {
	if o == nil {
		return UpdateRetrospectiveTemplateRequestBody{}
	}
	return o.RequestBody
}

type UpdateRetrospectiveTemplateResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Update a single retrospective template
	RetrospectivesTemplateEntity *shared.RetrospectivesTemplateEntity
}

func (o *UpdateRetrospectiveTemplateResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateRetrospectiveTemplateResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateRetrospectiveTemplateResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateRetrospectiveTemplateResponse) GetRetrospectivesTemplateEntity() *shared.RetrospectivesTemplateEntity {
	if o == nil {
		return nil
	}
	return o.RetrospectivesTemplateEntity
}
