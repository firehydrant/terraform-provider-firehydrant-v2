// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequestBody struct {
	Name                *string `json:"name,omitempty"`
	Slug                *string `json:"slug,omitempty"`
	Description         *string `json:"description,omitempty"`
	StartsAtMilestoneID *string `json:"starts_at_milestone_id,omitempty"`
	EndsAtMilestoneID   *string `json:"ends_at_milestone_id,omitempty"`
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequestBody) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequestBody) GetStartsAtMilestoneID() *string {
	if o == nil {
		return nil
	}
	return o.StartsAtMilestoneID
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequestBody) GetEndsAtMilestoneID() *string {
	if o == nil {
		return nil
	}
	return o.EndsAtMilestoneID
}

type PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequest struct {
	MeasurementDefinitionID string                                                                     `pathParam:"style=simple,explode=false,name=measurement_definition_id"`
	RequestBody             *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequestBody `request:"mediaType=application/json"`
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequest) GetMeasurementDefinitionID() string {
	if o == nil {
		return ""
	}
	return o.MeasurementDefinitionID
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequest) GetRequestBody() *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
