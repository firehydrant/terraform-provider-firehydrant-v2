// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"net/http"
	"time"
)

type ExportSignalsShiftAnalyticsRequestBody struct {
	// Array of team IDs to fetch oncall hours for
	TeamIds []string `multipartForm:"name=team_ids"`
	// Array of user IDs to fetch oncall hours for
	UserIds []string `multipartForm:"name=user_ids"`
}

func (o *ExportSignalsShiftAnalyticsRequestBody) GetTeamIds() []string {
	if o == nil {
		return nil
	}
	return o.TeamIds
}

func (o *ExportSignalsShiftAnalyticsRequestBody) GetUserIds() []string {
	if o == nil {
		return nil
	}
	return o.UserIds
}

type ExportSignalsShiftAnalyticsRequest struct {
	// Start of the period to fetch hours for (UTC)
	PeriodStart time.Time `queryParam:"style=form,explode=true,name=period_start"`
	// End of the period to fetch hours for (UTC)
	PeriodEnd   time.Time                               `queryParam:"style=form,explode=true,name=period_end"`
	RequestBody *ExportSignalsShiftAnalyticsRequestBody `request:"mediaType=multipart/form-data"`
}

func (e ExportSignalsShiftAnalyticsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *ExportSignalsShiftAnalyticsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ExportSignalsShiftAnalyticsRequest) GetPeriodStart() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.PeriodStart
}

func (o *ExportSignalsShiftAnalyticsRequest) GetPeriodEnd() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.PeriodEnd
}

func (o *ExportSignalsShiftAnalyticsRequest) GetRequestBody() *ExportSignalsShiftAnalyticsRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type ExportSignalsShiftAnalyticsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ExportSignalsShiftAnalyticsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ExportSignalsShiftAnalyticsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ExportSignalsShiftAnalyticsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
