// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"net/http"
	"time"
)

// ListCommentsSort - Allows sorting comments by the time they were posted, ascending or descending.
type ListCommentsSort string

const (
	ListCommentsSortAsc  ListCommentsSort = "asc"
	ListCommentsSortDesc ListCommentsSort = "desc"
)

func (e ListCommentsSort) ToPointer() *ListCommentsSort {
	return &e
}
func (e *ListCommentsSort) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = ListCommentsSort(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCommentsSort: %v", v)
	}
}

type ListCommentsRequest struct {
	// An ISO8601 timestamp that allows filtering for comments posted before the provided time.
	Before *time.Time `queryParam:"style=form,explode=true,name=before"`
	// An ISO8601 timestamp that allows filtering for comments posted after the provided time.
	After *time.Time `queryParam:"style=form,explode=true,name=after"`
	// Allows sorting comments by the time they were posted, ascending or descending.
	Sort           *ListCommentsSort `default:"asc" queryParam:"style=form,explode=true,name=sort"`
	ConversationID string            `pathParam:"style=simple,explode=false,name=conversation_id"`
}

func (l ListCommentsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListCommentsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListCommentsRequest) GetBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.Before
}

func (o *ListCommentsRequest) GetAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.After
}

func (o *ListCommentsRequest) GetSort() *ListCommentsSort {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListCommentsRequest) GetConversationID() string {
	if o == nil {
		return ""
	}
	return o.ConversationID
}

type ListCommentsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListCommentsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListCommentsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListCommentsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
