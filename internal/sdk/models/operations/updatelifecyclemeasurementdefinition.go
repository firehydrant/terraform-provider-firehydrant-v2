// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateLifecycleMeasurementDefinitionRequestBody struct {
	Description         *string `json:"description,omitempty"`
	EndsAtMilestoneID   *string `json:"ends_at_milestone_id,omitempty"`
	Name                *string `json:"name,omitempty"`
	Slug                *string `json:"slug,omitempty"`
	StartsAtMilestoneID *string `json:"starts_at_milestone_id,omitempty"`
}

func (o *UpdateLifecycleMeasurementDefinitionRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateLifecycleMeasurementDefinitionRequestBody) GetEndsAtMilestoneID() *string {
	if o == nil {
		return nil
	}
	return o.EndsAtMilestoneID
}

func (o *UpdateLifecycleMeasurementDefinitionRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateLifecycleMeasurementDefinitionRequestBody) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdateLifecycleMeasurementDefinitionRequestBody) GetStartsAtMilestoneID() *string {
	if o == nil {
		return nil
	}
	return o.StartsAtMilestoneID
}

type UpdateLifecycleMeasurementDefinitionRequest struct {
	MeasurementDefinitionID string                                           `pathParam:"style=simple,explode=false,name=measurement_definition_id"`
	RequestBody             *UpdateLifecycleMeasurementDefinitionRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateLifecycleMeasurementDefinitionRequest) GetMeasurementDefinitionID() string {
	if o == nil {
		return ""
	}
	return o.MeasurementDefinitionID
}

func (o *UpdateLifecycleMeasurementDefinitionRequest) GetRequestBody() *UpdateLifecycleMeasurementDefinitionRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateLifecycleMeasurementDefinitionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *UpdateLifecycleMeasurementDefinitionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateLifecycleMeasurementDefinitionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateLifecycleMeasurementDefinitionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
