// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type PutV1IncidentsIncidentIDResolveRequestBody struct {
	// The slug of any milestone in the post-incident or closed phase to set on the incident (and its children, if `resolve_children` os set). Must be one of the configured milestones available on this incident.
	Milestone *string `json:"milestone,omitempty"`
}

func (o *PutV1IncidentsIncidentIDResolveRequestBody) GetMilestone() *string {
	if o == nil {
		return nil
	}
	return o.Milestone
}

type PutV1IncidentsIncidentIDResolveRequest struct {
	IncidentID  string                                      `pathParam:"style=simple,explode=false,name=incident_id"`
	RequestBody *PutV1IncidentsIncidentIDResolveRequestBody `request:"mediaType=application/json"`
}

func (o *PutV1IncidentsIncidentIDResolveRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *PutV1IncidentsIncidentIDResolveRequest) GetRequestBody() *PutV1IncidentsIncidentIDResolveRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type PutV1IncidentsIncidentIDResolveResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Resolves a currently active incident
	IncidentEntity *shared.IncidentEntity
}

func (o *PutV1IncidentsIncidentIDResolveResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutV1IncidentsIncidentIDResolveResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutV1IncidentsIncidentIDResolveResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PutV1IncidentsIncidentIDResolveResponse) GetIncidentEntity() *shared.IncidentEntity {
	if o == nil {
		return nil
	}
	return o.IncidentEntity
}
