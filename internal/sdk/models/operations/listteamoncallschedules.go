// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type ListTeamOnCallSchedulesRequest struct {
	TeamID string `pathParam:"style=simple,explode=false,name=team_id"`
	// An optional ISO8601 timestamp for filtering the shifts listed in each on-call schedule to only include shifts that overlap with the provided time window. If provided, only shifts that end at or after this time will be included.
	ShiftTimeWindowStart *string `queryParam:"style=form,explode=true,name=shift_time_window_start"`
	// An optional ISO8601 timestamp for filtering the shifts listed in each on-call schedule to only include shifts that overlap with the provided time window.. If provided, only shifts that start at or before this time will be included.
	ShiftTimeWindowEnd *string `queryParam:"style=form,explode=true,name=shift_time_window_end"`
	// A query string for searching through the list of on-call schedules.
	Query   *string `queryParam:"style=form,explode=true,name=query"`
	Page    *int    `queryParam:"style=form,explode=true,name=page"`
	PerPage *int    `queryParam:"style=form,explode=true,name=per_page"`
}

func (o *ListTeamOnCallSchedulesRequest) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *ListTeamOnCallSchedulesRequest) GetShiftTimeWindowStart() *string {
	if o == nil {
		return nil
	}
	return o.ShiftTimeWindowStart
}

func (o *ListTeamOnCallSchedulesRequest) GetShiftTimeWindowEnd() *string {
	if o == nil {
		return nil
	}
	return o.ShiftTimeWindowEnd
}

func (o *ListTeamOnCallSchedulesRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *ListTeamOnCallSchedulesRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListTeamOnCallSchedulesRequest) GetPerPage() *int {
	if o == nil {
		return nil
	}
	return o.PerPage
}

type ListTeamOnCallSchedulesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List all Signals on-call schedules for a team.
	SignalsAPIOnCallSchedulePaginated *shared.SignalsAPIOnCallSchedulePaginated
}

func (o *ListTeamOnCallSchedulesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListTeamOnCallSchedulesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListTeamOnCallSchedulesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListTeamOnCallSchedulesResponse) GetSignalsAPIOnCallSchedulePaginated() *shared.SignalsAPIOnCallSchedulePaginated {
	if o == nil {
		return nil
	}
	return o.SignalsAPIOnCallSchedulePaginated
}
