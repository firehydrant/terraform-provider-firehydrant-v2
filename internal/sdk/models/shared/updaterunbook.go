// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// UpdateRunbookOwner - An object representing a Team that owns the runbook
type UpdateRunbookOwner struct {
	ID *string `json:"id,omitempty"`
}

func (o *UpdateRunbookOwner) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

type UpdateRunbookSeverity struct {
	ID *string `json:"id,omitempty"`
}

func (o *UpdateRunbookSeverity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

type UpdateRunbookService struct {
	ID *string `json:"id,omitempty"`
}

func (o *UpdateRunbookService) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

type Environment struct {
	ID *string `json:"id,omitempty"`
}

func (o *Environment) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

type UpdateRunbookAttachmentRule struct {
	// The JSON logic for the attaching the runbook
	Logic string `json:"logic"`
	// The user data for the rule
	UserData *string `json:"user_data,omitempty"`
}

func (o *UpdateRunbookAttachmentRule) GetLogic() string {
	if o == nil {
		return ""
	}
	return o.Logic
}

func (o *UpdateRunbookAttachmentRule) GetUserData() *string {
	if o == nil {
		return nil
	}
	return o.UserData
}

type UpdateRunbookRule struct {
	// The JSON logic for the rule
	Logic string `json:"logic"`
	// The user data for the rule
	UserData *string `json:"user_data,omitempty"`
}

func (o *UpdateRunbookRule) GetLogic() string {
	if o == nil {
		return ""
	}
	return o.Logic
}

func (o *UpdateRunbookRule) GetUserData() *string {
	if o == nil {
		return nil
	}
	return o.UserData
}

type UpdateRunbookStep struct {
	// ID of step to be updated
	StepID *string `json:"step_id,omitempty"`
	// Name for step
	Name string `json:"name"`
	// ID of action to use for this step.
	ActionID string             `json:"action_id"`
	Rule     *UpdateRunbookRule `json:"rule,omitempty"`
}

func (o *UpdateRunbookStep) GetStepID() *string {
	if o == nil {
		return nil
	}
	return o.StepID
}

func (o *UpdateRunbookStep) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *UpdateRunbookStep) GetActionID() string {
	if o == nil {
		return ""
	}
	return o.ActionID
}

func (o *UpdateRunbookStep) GetRule() *UpdateRunbookRule {
	if o == nil {
		return nil
	}
	return o.Rule
}

// UpdateRunbook - Update a runbook and any attachment rules associated with it. This endpoint is used to configure nearly everything
// about a runbook, including but not limited to the steps, environments, attachment rules, and severities.
type UpdateRunbook struct {
	Name        *string `json:"name,omitempty"`
	Summary     *string `json:"summary,omitempty"`
	Description *string `json:"description,omitempty"`
	// Whether or not this runbook is a tutorial runbook
	Tutorial *bool `json:"tutorial,omitempty"`
	// An object representing a Team that owns the runbook
	Owner          *UpdateRunbookOwner          `json:"owner,omitempty"`
	Severities     []UpdateRunbookSeverity      `json:"severities,omitempty"`
	Services       []UpdateRunbookService       `json:"services,omitempty"`
	Environments   []Environment                `json:"environments,omitempty"`
	AttachmentRule *UpdateRunbookAttachmentRule `json:"attachment_rule,omitempty"`
	Steps          []UpdateRunbookStep          `json:"steps,omitempty"`
	// Whether or not this runbook should be automatically attached to restricted incidents. Note that setting this to `true` will prevent it from being attached to public incidents, even manually. Defaults to `false`.
	AutoAttachToRestrictedIncidents *bool `json:"auto_attach_to_restricted_incidents,omitempty"`
}

func (o *UpdateRunbook) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateRunbook) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}

func (o *UpdateRunbook) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateRunbook) GetTutorial() *bool {
	if o == nil {
		return nil
	}
	return o.Tutorial
}

func (o *UpdateRunbook) GetOwner() *UpdateRunbookOwner {
	if o == nil {
		return nil
	}
	return o.Owner
}

func (o *UpdateRunbook) GetSeverities() []UpdateRunbookSeverity {
	if o == nil {
		return nil
	}
	return o.Severities
}

func (o *UpdateRunbook) GetServices() []UpdateRunbookService {
	if o == nil {
		return nil
	}
	return o.Services
}

func (o *UpdateRunbook) GetEnvironments() []Environment {
	if o == nil {
		return nil
	}
	return o.Environments
}

func (o *UpdateRunbook) GetAttachmentRule() *UpdateRunbookAttachmentRule {
	if o == nil {
		return nil
	}
	return o.AttachmentRule
}

func (o *UpdateRunbook) GetSteps() []UpdateRunbookStep {
	if o == nil {
		return nil
	}
	return o.Steps
}

func (o *UpdateRunbook) GetAutoAttachToRestrictedIncidents() *bool {
	if o == nil {
		return nil
	}
	return o.AutoAttachToRestrictedIncidents
}
