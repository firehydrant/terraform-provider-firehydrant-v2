// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UpdateWebhookState string

const (
	UpdateWebhookStateActive   UpdateWebhookState = "active"
	UpdateWebhookStateInactive UpdateWebhookState = "inactive"
)

func (e UpdateWebhookState) ToPointer() *UpdateWebhookState {
	return &e
}
func (e *UpdateWebhookState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		*e = UpdateWebhookState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateWebhookState: %v", v)
	}
}

// UpdateWebhook - Update a specific webhook
type UpdateWebhook struct {
	URL   *string             `json:"url,omitempty"`
	State *UpdateWebhookState `json:"state,omitempty"`
}

func (o *UpdateWebhook) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *UpdateWebhook) GetState() *UpdateWebhookState {
	if o == nil {
		return nil
	}
	return o.State
}
