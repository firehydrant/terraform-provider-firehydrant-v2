// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// RunbookStepConfig - An unstructured object of key/value pairs describing the config settings for the step.
type RunbookStepConfig struct {
}

type RunbookStep struct {
	Action    *NullableRunbooksActions `json:"action,omitempty"`
	ActionID  *string                  `json:"action_id,omitempty"`
	Automatic *bool                    `json:"automatic,omitempty"`
	// An unstructured object of key/value pairs describing the config settings for the step.
	Config          *RunbookStepConfig `json:"config,omitempty"`
	DelayDuration   *string            `json:"delay_duration,omitempty"`
	Name            *string            `json:"name,omitempty"`
	Repeats         *bool              `json:"repeats,omitempty"`
	RepeatsDuration *string            `json:"repeats_duration,omitempty"`
	Reruns          *bool              `json:"reruns,omitempty"`
	Rule            *NullableRules     `json:"rule,omitempty"`
	StepID          *string            `json:"step_id,omitempty"`
	Votes           *NullableVotes     `json:"votes,omitempty"`
}

func (o *RunbookStep) GetAction() *NullableRunbooksActions {
	if o == nil {
		return nil
	}
	return o.Action
}

func (o *RunbookStep) GetActionID() *string {
	if o == nil {
		return nil
	}
	return o.ActionID
}

func (o *RunbookStep) GetAutomatic() *bool {
	if o == nil {
		return nil
	}
	return o.Automatic
}

func (o *RunbookStep) GetConfig() *RunbookStepConfig {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *RunbookStep) GetDelayDuration() *string {
	if o == nil {
		return nil
	}
	return o.DelayDuration
}

func (o *RunbookStep) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *RunbookStep) GetRepeats() *bool {
	if o == nil {
		return nil
	}
	return o.Repeats
}

func (o *RunbookStep) GetRepeatsDuration() *string {
	if o == nil {
		return nil
	}
	return o.RepeatsDuration
}

func (o *RunbookStep) GetReruns() *bool {
	if o == nil {
		return nil
	}
	return o.Reruns
}

func (o *RunbookStep) GetRule() *NullableRules {
	if o == nil {
		return nil
	}
	return o.Rule
}

func (o *RunbookStep) GetStepID() *string {
	if o == nil {
		return nil
	}
	return o.StepID
}

func (o *RunbookStep) GetVotes() *NullableVotes {
	if o == nil {
		return nil
	}
	return o.Votes
}
