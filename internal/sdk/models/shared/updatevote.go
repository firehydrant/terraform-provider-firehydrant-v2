// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Direction - The direction you would like to vote, or if you dig it
type Direction string

const (
	DirectionUp   Direction = "up"
	DirectionDown Direction = "down"
	DirectionDig  Direction = "dig"
)

func (e Direction) ToPointer() *Direction {
	return &e
}
func (e *Direction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "up":
		fallthrough
	case "down":
		fallthrough
	case "dig":
		*e = Direction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Direction: %v", v)
	}
}

// UpdateVote - Upvote or downvote an object
type UpdateVote struct {
	// The direction you would like to vote, or if you dig it
	Direction Direction `json:"direction"`
}

func (o *UpdateVote) GetDirection() Direction {
	if o == nil {
		return Direction("")
	}
	return o.Direction
}
