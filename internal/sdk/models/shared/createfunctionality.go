// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type CreateFunctionalityExternalResourcesInput struct {
	// The integration slug for the external resource. Can be one of: github, opsgenie, pager_duty, statuspage, victorops. Not required if the resource has already been imported.
	ConnectionType *string `json:"connection_type,omitempty"`
	RemoteID       string  `json:"remote_id"`
}

func (o *CreateFunctionalityExternalResourcesInput) GetConnectionType() *string {
	if o == nil {
		return nil
	}
	return o.ConnectionType
}

func (o *CreateFunctionalityExternalResourcesInput) GetRemoteID() string {
	if o == nil {
		return ""
	}
	return o.RemoteID
}

type CreateFunctionalityLinksInput struct {
	// URL
	HrefURL string `json:"href_url"`
	// An optional URL to an icon representing this link
	IconURL *string `json:"icon_url,omitempty"`
	// Short name used to display and identify this link
	Name string `json:"name"`
}

func (o *CreateFunctionalityLinksInput) GetHrefURL() string {
	if o == nil {
		return ""
	}
	return o.HrefURL
}

func (o *CreateFunctionalityLinksInput) GetIconURL() *string {
	if o == nil {
		return nil
	}
	return o.IconURL
}

func (o *CreateFunctionalityLinksInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

// CreateFunctionalityOwnerInput - An object representing a Team that owns the service
type CreateFunctionalityOwnerInput struct {
	ID string `json:"id"`
}

func (o *CreateFunctionalityOwnerInput) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type CreateFunctionalityServicesInput struct {
	// ID of a service
	ID string `json:"id"`
}

func (o *CreateFunctionalityServicesInput) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type CreateFunctionalityTeamsInput struct {
	ID string `json:"id"`
}

func (o *CreateFunctionalityTeamsInput) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// CreateFunctionality - Creates a functionality for the organization
type CreateFunctionality struct {
	AlertOnAdd            *bool   `json:"alert_on_add,omitempty"`
	AutoAddRespondingTeam *bool   `json:"auto_add_responding_team,omitempty"`
	Description           *string `json:"description,omitempty"`
	// An array of external resources to attach to this service.
	ExternalResourcesInput []CreateFunctionalityExternalResourcesInput `json:"external_resources,omitempty"`
	// A hash of label keys and values
	Labels map[string]any `json:"labels,omitempty"`
	// An array of links to associate with this service
	LinksInput []CreateFunctionalityLinksInput `json:"links,omitempty"`
	Name       string                          `json:"name"`
	// An object representing a Team that owns the service
	OwnerInput    *CreateFunctionalityOwnerInput     `json:"owner,omitempty"`
	ServicesInput []CreateFunctionalityServicesInput `json:"services,omitempty"`
	// An array of teams to attach to this service.
	TeamsInput []CreateFunctionalityTeamsInput `json:"teams,omitempty"`
}

func (o *CreateFunctionality) GetAlertOnAdd() *bool {
	if o == nil {
		return nil
	}
	return o.AlertOnAdd
}

func (o *CreateFunctionality) GetAutoAddRespondingTeam() *bool {
	if o == nil {
		return nil
	}
	return o.AutoAddRespondingTeam
}

func (o *CreateFunctionality) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateFunctionality) GetExternalResourcesInput() []CreateFunctionalityExternalResourcesInput {
	if o == nil {
		return nil
	}
	return o.ExternalResourcesInput
}

func (o *CreateFunctionality) GetLabels() map[string]any {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *CreateFunctionality) GetLinksInput() []CreateFunctionalityLinksInput {
	if o == nil {
		return nil
	}
	return o.LinksInput
}

func (o *CreateFunctionality) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateFunctionality) GetOwnerInput() *CreateFunctionalityOwnerInput {
	if o == nil {
		return nil
	}
	return o.OwnerInput
}

func (o *CreateFunctionality) GetServicesInput() []CreateFunctionalityServicesInput {
	if o == nil {
		return nil
	}
	return o.ServicesInput
}

func (o *CreateFunctionality) GetTeamsInput() []CreateFunctionalityTeamsInput {
	if o == nil {
		return nil
	}
	return o.TeamsInput
}
