// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UpdateSeverityColor string

const (
	UpdateSeverityColorRed    UpdateSeverityColor = "red"
	UpdateSeverityColorOrange UpdateSeverityColor = "orange"
	UpdateSeverityColorYellow UpdateSeverityColor = "yellow"
	UpdateSeverityColorBlue   UpdateSeverityColor = "blue"
	UpdateSeverityColorTeal   UpdateSeverityColor = "teal"
	UpdateSeverityColorGrey   UpdateSeverityColor = "grey"
	UpdateSeverityColorGreen  UpdateSeverityColor = "green"
)

func (e UpdateSeverityColor) ToPointer() *UpdateSeverityColor {
	return &e
}
func (e *UpdateSeverityColor) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "red":
		fallthrough
	case "orange":
		fallthrough
	case "yellow":
		fallthrough
	case "blue":
		fallthrough
	case "teal":
		fallthrough
	case "grey":
		fallthrough
	case "green":
		*e = UpdateSeverityColor(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSeverityColor: %v", v)
	}
}

// UpdateSeverity - Update a specific severity
type UpdateSeverity struct {
	Slug        *string              `json:"slug,omitempty"`
	Description *string              `json:"description,omitempty"`
	Position    *int                 `json:"position,omitempty"`
	Color       *UpdateSeverityColor `json:"color,omitempty"`
}

func (o *UpdateSeverity) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdateSeverity) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateSeverity) GetPosition() *int {
	if o == nil {
		return nil
	}
	return o.Position
}

func (o *UpdateSeverity) GetColor() *UpdateSeverityColor {
	if o == nil {
		return nil
	}
	return o.Color
}
