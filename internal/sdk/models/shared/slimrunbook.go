// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type SlimRunbook struct {
	AttachmentRule *NullableRules `json:"attachment_rule,omitempty"`
	// categories the runbook applies to
	Categories  []string          `json:"categories,omitempty"`
	CreatedAt   *time.Time        `json:"created_at,omitempty"`
	Description *string           `json:"description,omitempty"`
	ID          *string           `json:"id,omitempty"`
	Name        *string           `json:"name,omitempty"`
	Owner       *NullableTeamLite `json:"owner,omitempty"`
	Summary     *string           `json:"summary,omitempty"`
	Type        *string           `json:"type,omitempty"`
	UpdatedAt   *time.Time        `json:"updated_at,omitempty"`
}

func (s SlimRunbook) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SlimRunbook) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SlimRunbook) GetAttachmentRule() *NullableRules {
	if o == nil {
		return nil
	}
	return o.AttachmentRule
}

func (o *SlimRunbook) GetCategories() []string {
	if o == nil {
		return nil
	}
	return o.Categories
}

func (o *SlimRunbook) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *SlimRunbook) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *SlimRunbook) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *SlimRunbook) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *SlimRunbook) GetOwner() *NullableTeamLite {
	if o == nil {
		return nil
	}
	return o.Owner
}

func (o *SlimRunbook) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}

func (o *SlimRunbook) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *SlimRunbook) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
