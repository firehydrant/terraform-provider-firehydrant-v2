// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type UpdateScimUserEmail struct {
	// Boolean which signifies if an email is intended as the primary email for the User
	Primary *bool `json:"primary,omitempty"`
	// String that represents an email address for the User
	Value string `json:"value"`
}

func (o *UpdateScimUserEmail) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *UpdateScimUserEmail) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

// UpdateScimUserName - The components of the user's name
type UpdateScimUserName struct {
	// The given name of the User, or first name in most Western languages
	FamilyName string `json:"familyName"`
	// The family name of the User, or last name in most Western languages
	GivenName string `json:"givenName"`
}

func (o *UpdateScimUserName) GetFamilyName() string {
	if o == nil {
		return ""
	}
	return o.FamilyName
}

func (o *UpdateScimUserName) GetGivenName() string {
	if o == nil {
		return ""
	}
	return o.GivenName
}

type UpdateScimUserPhoneNumber struct {
	// Boolean which signifies if a phone number is intended as the primary phone for the User
	Primary *bool `json:"primary,omitempty"`
	// Type of phone number (mobile, work, home, etc.)
	Type *string `json:"type,omitempty"`
	// String that represents a phone number for the User
	Value string `json:"value"`
}

func (o *UpdateScimUserPhoneNumber) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *UpdateScimUserPhoneNumber) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *UpdateScimUserPhoneNumber) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

// UpdateScimUser - PUT SCIM endpoint to update a User. This endpoint is used to replace a resource's attributes.
type UpdateScimUser struct {
	// Boolean that represents whether user is active
	Active *bool `json:"active,omitempty"`
	// Email addresses for the User
	Emails []UpdateScimUserEmail `json:"emails,omitempty"`
	// The components of the user's name
	Name *UpdateScimUserName `json:"name,omitempty"`
	// Phone numbers for the User
	PhoneNumbers []UpdateScimUserPhoneNumber `json:"phoneNumbers,omitempty"`
	// Roles for the User. Options are owner, member, collaborator, or viewer. Roles may be specified as strings or SCIM role objects.
	Roles map[string]any `json:"roles,omitempty"`
	// A service provider's unique identifier for the user
	UserName *string `json:"userName,omitempty"`
}

func (o *UpdateScimUser) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *UpdateScimUser) GetEmails() []UpdateScimUserEmail {
	if o == nil {
		return nil
	}
	return o.Emails
}

func (o *UpdateScimUser) GetName() *UpdateScimUserName {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateScimUser) GetPhoneNumbers() []UpdateScimUserPhoneNumber {
	if o == nil {
		return nil
	}
	return o.PhoneNumbers
}

func (o *UpdateScimUser) GetRoles() map[string]any {
	if o == nil {
		return nil
	}
	return o.Roles
}

func (o *UpdateScimUser) GetUserName() *string {
	if o == nil {
		return nil
	}
	return o.UserName
}
