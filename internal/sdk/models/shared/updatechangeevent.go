// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type UpdateChangeEventAttachmentsInput struct {
	Type string `json:"type"`
}

func (o *UpdateChangeEventAttachmentsInput) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// UpdateChangeEvent - Update a change event
type UpdateChangeEvent struct {
	// JSON objects representing attachments, see attachments documentation for the schema
	AttachmentsInput []UpdateChangeEventAttachmentsInput `json:"attachments,omitempty"`
	Description      *string                             `json:"description,omitempty"`
	EndsAt           *time.Time                          `json:"ends_at,omitempty"`
	// An array of environment IDs (setting this will overwrite the current environments)
	EnvironmentsInput []string       `json:"environments,omitempty"`
	Labels            map[string]any `json:"labels,omitempty"`
	// An array of service IDs (setting this will overwrite the current services)
	ServicesInput []string   `json:"services,omitempty"`
	StartsAt      *time.Time `json:"starts_at,omitempty"`
	Summary       *string    `json:"summary,omitempty"`
}

func (u UpdateChangeEvent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateChangeEvent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateChangeEvent) GetAttachmentsInput() []UpdateChangeEventAttachmentsInput {
	if o == nil {
		return nil
	}
	return o.AttachmentsInput
}

func (o *UpdateChangeEvent) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateChangeEvent) GetEndsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndsAt
}

func (o *UpdateChangeEvent) GetEnvironmentsInput() []string {
	if o == nil {
		return nil
	}
	return o.EnvironmentsInput
}

func (o *UpdateChangeEvent) GetLabels() map[string]any {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *UpdateChangeEvent) GetServicesInput() []string {
	if o == nil {
		return nil
	}
	return o.ServicesInput
}

func (o *UpdateChangeEvent) GetStartsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartsAt
}

func (o *UpdateChangeEvent) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}
