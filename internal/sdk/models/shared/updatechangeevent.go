// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type UpdateChangeEventType string

const (
	UpdateChangeEventTypeLink UpdateChangeEventType = "link"
)

func (e UpdateChangeEventType) ToPointer() *UpdateChangeEventType {
	return &e
}
func (e *UpdateChangeEventType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "link":
		*e = UpdateChangeEventType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateChangeEventType: %v", v)
	}
}

type UpdateChangeEventAttachment struct {
	Type UpdateChangeEventType `json:"type"`
}

func (o *UpdateChangeEventAttachment) GetType() UpdateChangeEventType {
	if o == nil {
		return UpdateChangeEventType("")
	}
	return o.Type
}

// UpdateChangeEvent - Update a change event
type UpdateChangeEvent struct {
	Summary     *string           `json:"summary,omitempty"`
	Description *string           `json:"description,omitempty"`
	Labels      map[string]string `json:"labels,omitempty"`
	StartsAt    *time.Time        `json:"starts_at,omitempty"`
	EndsAt      *time.Time        `json:"ends_at,omitempty"`
	// An array of environment IDs (setting this will overwrite the current environments)
	Environments []string `json:"environments,omitempty"`
	// An array of service IDs (setting this will overwrite the current services)
	Services []string `json:"services,omitempty"`
	// JSON objects representing attachments, see attachments documentation for the schema
	Attachments []UpdateChangeEventAttachment `json:"attachments,omitempty"`
}

func (u UpdateChangeEvent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateChangeEvent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateChangeEvent) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}

func (o *UpdateChangeEvent) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateChangeEvent) GetLabels() map[string]string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *UpdateChangeEvent) GetStartsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartsAt
}

func (o *UpdateChangeEvent) GetEndsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndsAt
}

func (o *UpdateChangeEvent) GetEnvironments() []string {
	if o == nil {
		return nil
	}
	return o.Environments
}

func (o *UpdateChangeEvent) GetServices() []string {
	if o == nil {
		return nil
	}
	return o.Services
}

func (o *UpdateChangeEvent) GetAttachments() []UpdateChangeEventAttachment {
	if o == nil {
		return nil
	}
	return o.Attachments
}
