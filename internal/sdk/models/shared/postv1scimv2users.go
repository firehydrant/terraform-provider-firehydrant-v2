// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// PostV1ScimV2UsersName - The components of the user's name
type PostV1ScimV2UsersName struct {
	// The family name of the User, or last name in most Western languages
	FamilyName string `json:"familyName"`
	// The given name of the User, or first name in most Western languages
	GivenName string `json:"givenName"`
}

func (o *PostV1ScimV2UsersName) GetFamilyName() string {
	if o == nil {
		return ""
	}
	return o.FamilyName
}

func (o *PostV1ScimV2UsersName) GetGivenName() string {
	if o == nil {
		return ""
	}
	return o.GivenName
}

type PostV1ScimV2UsersEmails struct {
	// String that represents an email address for the User
	Value string `json:"value"`
	// Boolean which signifies if an email is intended as the primary email for the User
	Primary bool `json:"primary"`
}

func (o *PostV1ScimV2UsersEmails) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *PostV1ScimV2UsersEmails) GetPrimary() bool {
	if o == nil {
		return false
	}
	return o.Primary
}

// PostV1ScimV2UsersRoles - Roles for the User. Options are owner, member, collaborator, or viewer. Roles may be specified as strings or SCIM role objects.
type PostV1ScimV2UsersRoles struct {
}

// PostV1ScimV2Users - SCIM endpoint to create and provision a new User. This endpoint will provision the User, which allows them to accept their account throught their IDP or via the Forgot Password flow.
type PostV1ScimV2Users struct {
	// A service provider's unique identifier for the user
	UserName string `json:"userName"`
	// The components of the user's name
	Name PostV1ScimV2UsersName `json:"name"`
	// Email addresses for the User
	Emails []PostV1ScimV2UsersEmails `json:"emails"`
	// Roles for the User. Options are owner, member, collaborator, or viewer. Roles may be specified as strings or SCIM role objects.
	Roles *PostV1ScimV2UsersRoles `json:"roles,omitempty"`
	// This attribute is intended to be used as a means to set, replace, or compare (i.e., filter for equality) a password
	Password *string `json:"password,omitempty"`
}

func (o *PostV1ScimV2Users) GetUserName() string {
	if o == nil {
		return ""
	}
	return o.UserName
}

func (o *PostV1ScimV2Users) GetName() PostV1ScimV2UsersName {
	if o == nil {
		return PostV1ScimV2UsersName{}
	}
	return o.Name
}

func (o *PostV1ScimV2Users) GetEmails() []PostV1ScimV2UsersEmails {
	if o == nil {
		return []PostV1ScimV2UsersEmails{}
	}
	return o.Emails
}

func (o *PostV1ScimV2Users) GetRoles() *PostV1ScimV2UsersRoles {
	if o == nil {
		return nil
	}
	return o.Roles
}

func (o *PostV1ScimV2Users) GetPassword() *string {
	if o == nil {
		return nil
	}
	return o.Password
}
