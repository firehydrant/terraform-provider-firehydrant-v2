// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type ServiceWithAllDependenciesServiceDependency struct {
}

// ServiceWithAllDependencies model
type ServiceWithAllDependencies struct {
	// Services that depend on this service
	ChildServiceDependencies []ServiceChildDependency `json:"child_service_dependencies,omitempty"`
	// Services that this service is dependent on
	ParentServiceDependencies []ServiceParentDependency `json:"parent_service_dependencies,omitempty"`
	// All dependencies. Can be one of: ServiceChildDependency, ServiceParentDependency
	ServiceDependencies []ServiceWithAllDependenciesServiceDependency `json:"service_dependencies,omitempty"`
}

func (o *ServiceWithAllDependencies) GetChildServiceDependencies() []ServiceChildDependency {
	if o == nil {
		return nil
	}
	return o.ChildServiceDependencies
}

func (o *ServiceWithAllDependencies) GetParentServiceDependencies() []ServiceParentDependency {
	if o == nil {
		return nil
	}
	return o.ParentServiceDependencies
}

func (o *ServiceWithAllDependencies) GetServiceDependencies() []ServiceWithAllDependenciesServiceDependency {
	if o == nil {
		return nil
	}
	return o.ServiceDependencies
}
