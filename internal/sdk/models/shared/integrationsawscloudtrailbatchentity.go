// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type IntegrationsAwsCloudtrailBatchEntityStatus string

const (
	IntegrationsAwsCloudtrailBatchEntityStatusInProgress IntegrationsAwsCloudtrailBatchEntityStatus = "in_progress"
	IntegrationsAwsCloudtrailBatchEntityStatusFailed     IntegrationsAwsCloudtrailBatchEntityStatus = "failed"
	IntegrationsAwsCloudtrailBatchEntityStatusSuccessful IntegrationsAwsCloudtrailBatchEntityStatus = "successful"
	IntegrationsAwsCloudtrailBatchEntityStatusPending    IntegrationsAwsCloudtrailBatchEntityStatus = "pending"
	IntegrationsAwsCloudtrailBatchEntityStatusRetried    IntegrationsAwsCloudtrailBatchEntityStatus = "retried"
)

func (e IntegrationsAwsCloudtrailBatchEntityStatus) ToPointer() *IntegrationsAwsCloudtrailBatchEntityStatus {
	return &e
}
func (e *IntegrationsAwsCloudtrailBatchEntityStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "in_progress":
		fallthrough
	case "failed":
		fallthrough
	case "successful":
		fallthrough
	case "pending":
		fallthrough
	case "retried":
		*e = IntegrationsAwsCloudtrailBatchEntityStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IntegrationsAwsCloudtrailBatchEntityStatus: %v", v)
	}
}

// IntegrationsAwsCloudtrailBatchEntity - Integrations_Aws_CloudtrailBatchEntity model
type IntegrationsAwsCloudtrailBatchEntity struct {
	ID            *string                                     `json:"id,omitempty"`
	EventsCreated *int                                        `json:"events_created,omitempty"`
	Status        *IntegrationsAwsCloudtrailBatchEntityStatus `json:"status,omitempty"`
	StartsAt      *time.Time                                  `json:"starts_at,omitempty"`
	EndsAt        *time.Time                                  `json:"ends_at,omitempty"`
	Connection    *NullableIntegrationsAwsConnectionEntity    `json:"connection,omitempty"`
	CreatedAt     *time.Time                                  `json:"created_at,omitempty"`
}

func (i IntegrationsAwsCloudtrailBatchEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IntegrationsAwsCloudtrailBatchEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *IntegrationsAwsCloudtrailBatchEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *IntegrationsAwsCloudtrailBatchEntity) GetEventsCreated() *int {
	if o == nil {
		return nil
	}
	return o.EventsCreated
}

func (o *IntegrationsAwsCloudtrailBatchEntity) GetStatus() *IntegrationsAwsCloudtrailBatchEntityStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *IntegrationsAwsCloudtrailBatchEntity) GetStartsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartsAt
}

func (o *IntegrationsAwsCloudtrailBatchEntity) GetEndsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndsAt
}

func (o *IntegrationsAwsCloudtrailBatchEntity) GetConnection() *NullableIntegrationsAwsConnectionEntity {
	if o == nil {
		return nil
	}
	return o.Connection
}

func (o *IntegrationsAwsCloudtrailBatchEntity) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}
