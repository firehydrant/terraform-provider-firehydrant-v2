// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type CreateTeamCallRouteStepsInput struct {
	// The ID of a specific on-call rotation that should be routed to if the `target_type` is `OnCallSchedule`. If not provided, the schedule's first rotation will be used.
	OnCallRotationID *string `json:"on_call_rotation_id,omitempty"`
	// ID of the target
	TargetID string `json:"target_id"`
	// Type of target
	TargetType string `json:"target_type"`
	// Timeout in seconds for the step
	Timeout string `json:"timeout"`
}

func (o *CreateTeamCallRouteStepsInput) GetOnCallRotationID() *string {
	if o == nil {
		return nil
	}
	return o.OnCallRotationID
}

func (o *CreateTeamCallRouteStepsInput) GetTargetID() string {
	if o == nil {
		return ""
	}
	return o.TargetID
}

func (o *CreateTeamCallRouteStepsInput) GetTargetType() string {
	if o == nil {
		return ""
	}
	return o.TargetType
}

func (o *CreateTeamCallRouteStepsInput) GetTimeout() string {
	if o == nil {
		return ""
	}
	return o.Timeout
}

// CreateTeamCallRouteTargetInput - Target for the call route (required unless connect_mode is direct_dial)
type CreateTeamCallRouteTargetInput struct {
	// ID of the target
	ID string `json:"id"`
	// Type of target
	Type string `json:"type"`
}

func (o *CreateTeamCallRouteTargetInput) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateTeamCallRouteTargetInput) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateTeamCallRoute - Create a call route for a team
type CreateTeamCallRoute struct {
	// Connect mode for the call route
	ConnectMode *string `json:"connect_mode,omitempty"`
	// Description of the call route
	Description *string `json:"description,omitempty"`
	// Greeting message for the call route
	GreetingMessage *string `json:"greeting_message,omitempty"`
	// Name of the call route
	Name string `json:"name"`
	// Phone number to route calls to
	PhoneNumber string `json:"phone_number"`
	// Routing mode for the call route
	RoutingMode string `json:"routing_mode"`
	// Steps for the call route
	StepsInput []CreateTeamCallRouteStepsInput `json:"steps,omitempty"`
	// Target for the call route (required unless connect_mode is direct_dial)
	TargetInput *CreateTeamCallRouteTargetInput `json:"target,omitempty"`
}

func (o *CreateTeamCallRoute) GetConnectMode() *string {
	if o == nil {
		return nil
	}
	return o.ConnectMode
}

func (o *CreateTeamCallRoute) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateTeamCallRoute) GetGreetingMessage() *string {
	if o == nil {
		return nil
	}
	return o.GreetingMessage
}

func (o *CreateTeamCallRoute) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateTeamCallRoute) GetPhoneNumber() string {
	if o == nil {
		return ""
	}
	return o.PhoneNumber
}

func (o *CreateTeamCallRoute) GetRoutingMode() string {
	if o == nil {
		return ""
	}
	return o.RoutingMode
}

func (o *CreateTeamCallRoute) GetStepsInput() []CreateTeamCallRouteStepsInput {
	if o == nil {
		return nil
	}
	return o.StepsInput
}

func (o *CreateTeamCallRoute) GetTargetInput() *CreateTeamCallRouteTargetInput {
	if o == nil {
		return nil
	}
	return o.TargetInput
}
