// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type CreateIncidentAttachmentFormFile struct {
	FileName string `multipartForm:"name=fileName"`
	Content  []byte `multipartForm:"content"`
}

func (o *CreateIncidentAttachmentFormFile) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

func (o *CreateIncidentAttachmentFormFile) GetContent() []byte {
	if o == nil {
		return []byte{}
	}
	return o.Content
}

type CreateIncidentAttachmentForm struct {
	Description   *string                          `multipartForm:"name=description"`
	File          CreateIncidentAttachmentFormFile `multipartForm:"file,name=file"`
	OccurredAt    *time.Time                       `multipartForm:"name=occurred_at"`
	VoteDirection *string                          `multipartForm:"name=vote_direction"`
}

func (c CreateIncidentAttachmentForm) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateIncidentAttachmentForm) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateIncidentAttachmentForm) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateIncidentAttachmentForm) GetFile() CreateIncidentAttachmentFormFile {
	if o == nil {
		return CreateIncidentAttachmentFormFile{}
	}
	return o.File
}

func (o *CreateIncidentAttachmentForm) GetOccurredAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.OccurredAt
}

func (o *CreateIncidentAttachmentForm) GetVoteDirection() *string {
	if o == nil {
		return nil
	}
	return o.VoteDirection
}
