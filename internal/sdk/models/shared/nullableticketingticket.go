// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type NullableTicketingTicketAttachment struct {
}

// NullableTicketingTicket - Ticketing_Ticket model
type NullableTicketingTicket struct {
	Assignees []Author `json:"assignees,omitempty"`
	// A list of objects attached to this item. Can be one of: Link, CustomerSupportIssue, or GenericAttachment
	Attachments []NullableTicketingTicketAttachment `json:"attachments,omitempty"`
	CreatedAt   *time.Time                          `json:"created_at,omitempty"`
	CreatedBy   *NullableAuthor                     `json:"created_by,omitempty"`
	Description *string                             `json:"description,omitempty"`
	DueAt       *time.Time                          `json:"due_at,omitempty"`
	ID          *string                             `json:"id,omitempty"`
	// Milestone of incident that this ticket is related to
	IncidentCurrentMilestone *string `json:"incident_current_milestone,omitempty"`
	// ID of incident that this ticket is related to
	IncidentID *string `json:"incident_id,omitempty"`
	// Name of incident that this ticket is related to
	IncidentName *string                    `json:"incident_name,omitempty"`
	Link         *NullableAttachmentsLink   `json:"link,omitempty"`
	Priority     *NullableTicketingPriority `json:"priority,omitempty"`
	State        *string                    `json:"state,omitempty"`
	Summary      *string                    `json:"summary,omitempty"`
	// Error message from syncing this ticket to integrations
	SyncErrorMessage *string  `json:"sync_error_message,omitempty"`
	TagList          []string `json:"tag_list,omitempty"`
	// ID of task that this ticket is related to
	TaskID    *string    `json:"task_id,omitempty"`
	Type      *string    `json:"type,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (n NullableTicketingTicket) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *NullableTicketingTicket) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *NullableTicketingTicket) GetAssignees() []Author {
	if o == nil {
		return nil
	}
	return o.Assignees
}

func (o *NullableTicketingTicket) GetAttachments() []NullableTicketingTicketAttachment {
	if o == nil {
		return nil
	}
	return o.Attachments
}

func (o *NullableTicketingTicket) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *NullableTicketingTicket) GetCreatedBy() *NullableAuthor {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *NullableTicketingTicket) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *NullableTicketingTicket) GetDueAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DueAt
}

func (o *NullableTicketingTicket) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *NullableTicketingTicket) GetIncidentCurrentMilestone() *string {
	if o == nil {
		return nil
	}
	return o.IncidentCurrentMilestone
}

func (o *NullableTicketingTicket) GetIncidentID() *string {
	if o == nil {
		return nil
	}
	return o.IncidentID
}

func (o *NullableTicketingTicket) GetIncidentName() *string {
	if o == nil {
		return nil
	}
	return o.IncidentName
}

func (o *NullableTicketingTicket) GetLink() *NullableAttachmentsLink {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *NullableTicketingTicket) GetPriority() *NullableTicketingPriority {
	if o == nil {
		return nil
	}
	return o.Priority
}

func (o *NullableTicketingTicket) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *NullableTicketingTicket) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}

func (o *NullableTicketingTicket) GetSyncErrorMessage() *string {
	if o == nil {
		return nil
	}
	return o.SyncErrorMessage
}

func (o *NullableTicketingTicket) GetTagList() []string {
	if o == nil {
		return nil
	}
	return o.TagList
}

func (o *NullableTicketingTicket) GetTaskID() *string {
	if o == nil {
		return nil
	}
	return o.TaskID
}

func (o *NullableTicketingTicket) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *NullableTicketingTicket) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
