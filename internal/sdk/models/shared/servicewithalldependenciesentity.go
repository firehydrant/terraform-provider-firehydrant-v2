// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type ServiceDependency struct {
}

// ServiceWithAllDependenciesEntity model
type ServiceWithAllDependenciesEntity struct {
	// Services that depend on this service
	ChildServiceDependencies []ServiceChildDependencyEntity `json:"child_service_dependencies,omitempty"`
	// Services that this service is dependent on
	ParentServiceDependencies []ServiceParentDependencyEntity `json:"parent_service_dependencies,omitempty"`
	// All dependencies. Can be one of: ServiceChildDependencyEntity, ServiceParentDependencyEntity
	ServiceDependencies []ServiceDependency `json:"service_dependencies,omitempty"`
}

func (o *ServiceWithAllDependenciesEntity) GetChildServiceDependencies() []ServiceChildDependencyEntity {
	if o == nil {
		return nil
	}
	return o.ChildServiceDependencies
}

func (o *ServiceWithAllDependenciesEntity) GetParentServiceDependencies() []ServiceParentDependencyEntity {
	if o == nil {
		return nil
	}
	return o.ParentServiceDependencies
}

func (o *ServiceWithAllDependenciesEntity) GetServiceDependencies() []ServiceDependency {
	if o == nil {
		return nil
	}
	return o.ServiceDependencies
}
