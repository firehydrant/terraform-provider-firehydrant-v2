// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

// CreateOnCallShift - Create a Signals on-call shift in a schedule.
type CreateOnCallShift struct {
	// The end time of the shift in ISO8601 format.
	EndTime time.Time `json:"end_time"`
	// The ID of the on-call rotation you want to create the shift in. This parameter is optional for backwards compatibility but must be provided if the schedule has multiple rotations.
	RotationID *string `json:"rotation_id,omitempty"`
	// The start time of the shift in ISO8601 format.
	StartTime time.Time `json:"start_time"`
	// The ID of the user who is on-call for the shift. If not provided, the shift will be unassigned.
	UserID *string `json:"user_id,omitempty"`
}

func (c CreateOnCallShift) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateOnCallShift) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateOnCallShift) GetEndTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.EndTime
}

func (o *CreateOnCallShift) GetRotationID() *string {
	if o == nil {
		return nil
	}
	return o.RotationID
}

func (o *CreateOnCallShift) GetStartTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartTime
}

func (o *CreateOnCallShift) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}
