// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateServiceExternalResourcesInput struct {
	// The integration slug for the external resource. Can be one of: github, opsgenie, pager_duty, victorops. Not required if the resource has already been imported.
	ConnectionType *string `json:"connection_type,omitempty"`
	RemoteID       string  `json:"remote_id"`
}

func (o *CreateServiceExternalResourcesInput) GetConnectionType() *string {
	if o == nil {
		return nil
	}
	return o.ConnectionType
}

func (o *CreateServiceExternalResourcesInput) GetRemoteID() string {
	if o == nil {
		return ""
	}
	return o.RemoteID
}

type CreateServiceFunctionalitiesInput struct {
	// If you are trying to reuse a functionality, you may set the ID to attach it to the service
	ID *string `json:"id,omitempty"`
	// If you are trying to create a new functionality and attach it to this service, set the summary key
	Summary *string `json:"summary,omitempty"`
}

func (o *CreateServiceFunctionalitiesInput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CreateServiceFunctionalitiesInput) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}

type CreateServiceLinksInput struct {
	// URL
	HrefURL string `json:"href_url"`
	// An optional URL to an icon representing this link
	IconURL *string `json:"icon_url,omitempty"`
	// Short name used to display and identify this link
	Name string `json:"name"`
}

func (o *CreateServiceLinksInput) GetHrefURL() string {
	if o == nil {
		return ""
	}
	return o.HrefURL
}

func (o *CreateServiceLinksInput) GetIconURL() *string {
	if o == nil {
		return nil
	}
	return o.IconURL
}

func (o *CreateServiceLinksInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

// CreateServiceOwnerInput - An object representing a Team that owns the service
type CreateServiceOwnerInput struct {
	ID string `json:"id"`
}

func (o *CreateServiceOwnerInput) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// CreateServiceServiceTier - Integer representing service tier. Lower values represent higher criticality. If not specified the default value will be 5.
type CreateServiceServiceTier int

const (
	CreateServiceServiceTierZero  CreateServiceServiceTier = 0
	CreateServiceServiceTierOne   CreateServiceServiceTier = 1
	CreateServiceServiceTierTwo   CreateServiceServiceTier = 2
	CreateServiceServiceTierThree CreateServiceServiceTier = 3
	CreateServiceServiceTierFour  CreateServiceServiceTier = 4
	CreateServiceServiceTierFive  CreateServiceServiceTier = 5
)

func (e CreateServiceServiceTier) ToPointer() *CreateServiceServiceTier {
	return &e
}
func (e *CreateServiceServiceTier) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		*e = CreateServiceServiceTier(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateServiceServiceTier: %v", v)
	}
}

type CreateServiceTeamsInput struct {
	ID string `json:"id"`
}

func (o *CreateServiceTeamsInput) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// CreateService - Creates a service for the organization, you may also create or attach functionalities to the service on create.
type CreateService struct {
	AlertOnAdd            *bool   `json:"alert_on_add,omitempty"`
	AutoAddRespondingTeam *bool   `json:"auto_add_responding_team,omitempty"`
	Description           *string `json:"description,omitempty"`
	// An array of external resources to attach to this service.
	ExternalResourcesInput []CreateServiceExternalResourcesInput `json:"external_resources,omitempty"`
	// An array of functionalities
	FunctionalitiesInput []CreateServiceFunctionalitiesInput `json:"functionalities,omitempty"`
	// A hash of label keys and values
	Labels map[string]any `json:"labels,omitempty"`
	// An array of links to associate with this service
	LinksInput []CreateServiceLinksInput `json:"links,omitempty"`
	Name       string                    `json:"name"`
	// An object representing a Team that owns the service
	OwnerInput *CreateServiceOwnerInput `json:"owner,omitempty"`
	// Integer representing service tier. Lower values represent higher criticality. If not specified the default value will be 5.
	ServiceTier *CreateServiceServiceTier `json:"service_tier,omitempty"`
	// An array of teams to attach to this service.
	TeamsInput []CreateServiceTeamsInput `json:"teams,omitempty"`
}

func (o *CreateService) GetAlertOnAdd() *bool {
	if o == nil {
		return nil
	}
	return o.AlertOnAdd
}

func (o *CreateService) GetAutoAddRespondingTeam() *bool {
	if o == nil {
		return nil
	}
	return o.AutoAddRespondingTeam
}

func (o *CreateService) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateService) GetExternalResourcesInput() []CreateServiceExternalResourcesInput {
	if o == nil {
		return nil
	}
	return o.ExternalResourcesInput
}

func (o *CreateService) GetFunctionalitiesInput() []CreateServiceFunctionalitiesInput {
	if o == nil {
		return nil
	}
	return o.FunctionalitiesInput
}

func (o *CreateService) GetLabels() map[string]any {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *CreateService) GetLinksInput() []CreateServiceLinksInput {
	if o == nil {
		return nil
	}
	return o.LinksInput
}

func (o *CreateService) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateService) GetOwnerInput() *CreateServiceOwnerInput {
	if o == nil {
		return nil
	}
	return o.OwnerInput
}

func (o *CreateService) GetServiceTier() *CreateServiceServiceTier {
	if o == nil {
		return nil
	}
	return o.ServiceTier
}

func (o *CreateService) GetTeamsInput() []CreateServiceTeamsInput {
	if o == nil {
		return nil
	}
	return o.TeamsInput
}
