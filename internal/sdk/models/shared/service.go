// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

// ServiceManagedBySettings - Indicates the settings of the catalog that manages this service
type ServiceManagedBySettings struct {
}

// Service model
type Service struct {
	// List of active incident guids
	ActiveIncidents       []string `json:"active_incidents,omitempty"`
	AlertOnAdd            *bool    `json:"alert_on_add,omitempty"`
	AllowedParams         []string `json:"allowed_params,omitempty"`
	AutoAddRespondingTeam *bool    `json:"auto_add_responding_team,omitempty"`
	// List of checklists associated with a service
	Checklists      []ChecklistTemplate `json:"checklists,omitempty"`
	CompletedChecks *int                `json:"completed_checks,omitempty"`
	CreatedAt       *time.Time          `json:"created_at,omitempty"`
	Description     *string             `json:"description,omitempty"`
	// Information about known linkages to representations of services outside of FireHydrant.
	ExternalResources []ExternalResource `json:"external_resources,omitempty"`
	// List of functionalities attached to the service
	Functionalities []Functionality `json:"functionalities,omitempty"`
	ID              *string         `json:"id,omitempty"`
	// An object of label key and values
	Labels     map[string]any                     `json:"labels,omitempty"`
	LastImport *NullableImportsImportableResource `json:"last_import,omitempty"`
	// List of links attached to this service.
	Links []Links `json:"links,omitempty"`
	// If set, this field indicates that the service is managed by an integration and thus cannot be set manually
	ManagedBy *string `json:"managed_by,omitempty"`
	// Indicates the settings of the catalog that manages this service
	ManagedBySettings         *ServiceManagedBySettings `json:"managed_by_settings,omitempty"`
	Name                      *string                   `json:"name,omitempty"`
	Owner                     *NullableTeamLite         `json:"owner,omitempty"`
	ServiceChecklistUpdatedAt *time.Time                `json:"service_checklist_updated_at,omitempty"`
	ServiceTier               *int                      `json:"service_tier,omitempty"`
	Slug                      *string                   `json:"slug,omitempty"`
	// List of teams attached to the service
	Teams     []TeamLite      `json:"teams,omitempty"`
	UpdatedAt *time.Time      `json:"updated_at,omitempty"`
	UpdatedBy *NullableAuthor `json:"updated_by,omitempty"`
}

func (s Service) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *Service) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Service) GetActiveIncidents() []string {
	if o == nil {
		return nil
	}
	return o.ActiveIncidents
}

func (o *Service) GetAlertOnAdd() *bool {
	if o == nil {
		return nil
	}
	return o.AlertOnAdd
}

func (o *Service) GetAllowedParams() []string {
	if o == nil {
		return nil
	}
	return o.AllowedParams
}

func (o *Service) GetAutoAddRespondingTeam() *bool {
	if o == nil {
		return nil
	}
	return o.AutoAddRespondingTeam
}

func (o *Service) GetChecklists() []ChecklistTemplate {
	if o == nil {
		return nil
	}
	return o.Checklists
}

func (o *Service) GetCompletedChecks() *int {
	if o == nil {
		return nil
	}
	return o.CompletedChecks
}

func (o *Service) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Service) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Service) GetExternalResources() []ExternalResource {
	if o == nil {
		return nil
	}
	return o.ExternalResources
}

func (o *Service) GetFunctionalities() []Functionality {
	if o == nil {
		return nil
	}
	return o.Functionalities
}

func (o *Service) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Service) GetLabels() map[string]any {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *Service) GetLastImport() *NullableImportsImportableResource {
	if o == nil {
		return nil
	}
	return o.LastImport
}

func (o *Service) GetLinks() []Links {
	if o == nil {
		return nil
	}
	return o.Links
}

func (o *Service) GetManagedBy() *string {
	if o == nil {
		return nil
	}
	return o.ManagedBy
}

func (o *Service) GetManagedBySettings() *ServiceManagedBySettings {
	if o == nil {
		return nil
	}
	return o.ManagedBySettings
}

func (o *Service) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Service) GetOwner() *NullableTeamLite {
	if o == nil {
		return nil
	}
	return o.Owner
}

func (o *Service) GetServiceChecklistUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ServiceChecklistUpdatedAt
}

func (o *Service) GetServiceTier() *int {
	if o == nil {
		return nil
	}
	return o.ServiceTier
}

func (o *Service) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *Service) GetTeams() []TeamLite {
	if o == nil {
		return nil
	}
	return o.Teams
}

func (o *Service) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *Service) GetUpdatedBy() *NullableAuthor {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}
