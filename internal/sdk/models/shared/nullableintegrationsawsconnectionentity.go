// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NullableIntegrationsAwsConnectionEntityConnectionStatus string

const (
	NullableIntegrationsAwsConnectionEntityConnectionStatusPendingSetup       NullableIntegrationsAwsConnectionEntityConnectionStatus = "pending_setup"
	NullableIntegrationsAwsConnectionEntityConnectionStatusRoleAssumed        NullableIntegrationsAwsConnectionEntityConnectionStatus = "role_assumed"
	NullableIntegrationsAwsConnectionEntityConnectionStatusCantAssumeRole     NullableIntegrationsAwsConnectionEntityConnectionStatus = "cant_assume_role"
	NullableIntegrationsAwsConnectionEntityConnectionStatusInvalidPermissions NullableIntegrationsAwsConnectionEntityConnectionStatus = "invalid_permissions"
	NullableIntegrationsAwsConnectionEntityConnectionStatusValidated          NullableIntegrationsAwsConnectionEntityConnectionStatus = "validated"
)

func (e NullableIntegrationsAwsConnectionEntityConnectionStatus) ToPointer() *NullableIntegrationsAwsConnectionEntityConnectionStatus {
	return &e
}
func (e *NullableIntegrationsAwsConnectionEntityConnectionStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending_setup":
		fallthrough
	case "role_assumed":
		fallthrough
	case "cant_assume_role":
		fallthrough
	case "invalid_permissions":
		fallthrough
	case "validated":
		*e = NullableIntegrationsAwsConnectionEntityConnectionStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NullableIntegrationsAwsConnectionEntityConnectionStatus: %v", v)
	}
}

// NullableIntegrationsAwsConnectionEntity - Integrations_Aws_ConnectionEntity model
type NullableIntegrationsAwsConnectionEntity struct {
	ID                *string                                                  `json:"id,omitempty"`
	AwsAccountID      *string                                                  `json:"aws_account_id,omitempty"`
	TargetArn         *string                                                  `json:"target_arn,omitempty"`
	ExternalID        *string                                                  `json:"external_id,omitempty"`
	ConnectionStatus  *NullableIntegrationsAwsConnectionEntityConnectionStatus `json:"connection_status,omitempty"`
	StatusText        *string                                                  `json:"status_text,omitempty"`
	StatusDescription *string                                                  `json:"status_description,omitempty"`
	EnvironmentID     *string                                                  `json:"environment_id,omitempty"`
	EnvironmentName   *string                                                  `json:"environment_name,omitempty"`
	Regions           []string                                                 `json:"regions,omitempty"`
}

func (o *NullableIntegrationsAwsConnectionEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *NullableIntegrationsAwsConnectionEntity) GetAwsAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AwsAccountID
}

func (o *NullableIntegrationsAwsConnectionEntity) GetTargetArn() *string {
	if o == nil {
		return nil
	}
	return o.TargetArn
}

func (o *NullableIntegrationsAwsConnectionEntity) GetExternalID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalID
}

func (o *NullableIntegrationsAwsConnectionEntity) GetConnectionStatus() *NullableIntegrationsAwsConnectionEntityConnectionStatus {
	if o == nil {
		return nil
	}
	return o.ConnectionStatus
}

func (o *NullableIntegrationsAwsConnectionEntity) GetStatusText() *string {
	if o == nil {
		return nil
	}
	return o.StatusText
}

func (o *NullableIntegrationsAwsConnectionEntity) GetStatusDescription() *string {
	if o == nil {
		return nil
	}
	return o.StatusDescription
}

func (o *NullableIntegrationsAwsConnectionEntity) GetEnvironmentID() *string {
	if o == nil {
		return nil
	}
	return o.EnvironmentID
}

func (o *NullableIntegrationsAwsConnectionEntity) GetEnvironmentName() *string {
	if o == nil {
		return nil
	}
	return o.EnvironmentName
}

func (o *NullableIntegrationsAwsConnectionEntity) GetRegions() []string {
	if o == nil {
		return nil
	}
	return o.Regions
}
