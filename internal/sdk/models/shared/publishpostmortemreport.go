// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Publish string

const (
	PublishTrue Publish = "true"
)

func (e Publish) ToPointer() *Publish {
	return &e
}
func (e *Publish) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "true":
		*e = Publish(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Publish: %v", v)
	}
}

// PublishPostMortemReport - Marks an incident retrospective as published and emails all of the participants in the report the summary
type PublishPostMortemReport struct {
	Publish *Publish `json:"publish,omitempty"`
	// An array of user IDs with whom to share the report
	UserIds []string `json:"user_ids,omitempty"`
	// An array of team IDs with whom to share the report
	TeamIds []string `json:"team_ids,omitempty"`
}

func (o *PublishPostMortemReport) GetPublish() *Publish {
	if o == nil {
		return nil
	}
	return o.Publish
}

func (o *PublishPostMortemReport) GetUserIds() []string {
	if o == nil {
		return nil
	}
	return o.UserIds
}

func (o *PublishPostMortemReport) GetTeamIds() []string {
	if o == nil {
		return nil
	}
	return o.TeamIds
}
