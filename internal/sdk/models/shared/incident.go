// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

// IncidentLabels - A key/value of labels
type IncidentLabels struct {
}

type IncidentRetroExport struct {
}

// Incident model
type Incident struct {
	Active            *bool   `json:"active,omitempty"`
	AiIncidentSummary *string `json:"ai_incident_summary,omitempty"`
	ChannelID         *string `json:"channel_id,omitempty"`
	ChannelName       *string `json:"channel_name,omitempty"`
	ChannelReference  *string `json:"channel_reference,omitempty"`
	// inoperative: 0, operational: 1, archived: 2
	ChannelStatus     *string                         `json:"channel_status,omitempty"`
	ConferenceBridges []IncidentsConferenceBridge     `json:"conference_bridges,omitempty"`
	ContextObject     *NullableIncidentsContextObject `json:"context_object,omitempty"`
	Conversations     []ConversationsAPIReference     `json:"conversations,omitempty"`
	// The time the incident was opened
	CreatedAt *time.Time      `json:"created_at,omitempty"`
	CreatedBy *NullableAuthor `json:"created_by,omitempty"`
	// The type/slug of the current milestone. Will be one of the currently configured milestones for the given incident.
	CurrentMilestone      *string                  `json:"current_milestone,omitempty"`
	CustomFields          []CustomFieldsFieldValue `json:"custom_fields,omitempty"`
	CustomerImpactSummary *string                  `json:"customer_impact_summary,omitempty"`
	CustomersImpacted     *int                     `json:"customers_impacted,omitempty"`
	Description           *string                  `json:"description,omitempty"`
	// The time the incident was archived
	DiscardedAt       *time.Time                 `json:"discarded_at,omitempty"`
	Environments      []Succinct                 `json:"environments,omitempty"`
	FieldRequirements []IncidentFieldRequirement `json:"field_requirements,omitempty"`
	Functionalities   []Succinct                 `json:"functionalities,omitempty"`
	// UUID of the Incident
	ID               *string            `json:"id,omitempty"`
	Impacts          []IncidentsImpact  `json:"impacts,omitempty"`
	IncidentChannels []IncidentsChannel `json:"incident_channels,omitempty"`
	IncidentTickets  []TicketingTicket  `json:"incident_tickets,omitempty"`
	IncidentType     *NullableSuccinct  `json:"incident_type,omitempty"`
	IncidentURL      *string            `json:"incident_url,omitempty"`
	// A key/value of labels
	Labels                *IncidentLabels                 `json:"labels,omitempty"`
	LastNote              *NullableEventNote              `json:"last_note,omitempty"`
	LastUpdate            *string                         `json:"last_update,omitempty"`
	LifecycleMeasurements []IncidentsLifecycleMeasurement `json:"lifecycle_measurements,omitempty"`
	LifecyclePhases       []IncidentsLifecyclePhase       `json:"lifecycle_phases,omitempty"`
	// DEPRECATED: Please use lifecycle phases instead
	Milestones          []IncidentsMilestone `json:"milestones,omitempty"`
	MonetaryImpact      *int                 `json:"monetary_impact,omitempty"`
	MonetaryImpactCents *int                 `json:"monetary_impact_cents,omitempty"`
	// Name of the incident
	Name *string `json:"name,omitempty"`
	// Incident number
	Number               *int                  `json:"number,omitempty"`
	Organization         *NullableOrganization `json:"organization,omitempty"`
	OrganizationID       *string               `json:"organization_id,omitempty"`
	Priority             *string               `json:"priority,omitempty"`
	PrivateID            *string               `json:"private_id,omitempty"`
	PrivateStatusPageURL *string               `json:"private_status_page_url,omitempty"`
	ReportID             *string               `json:"report_id,omitempty"`
	// A list of objects attached to this item. Can be one of: Link, CustomerSupportIssue, or GenericAttachment
	RetroExports            []IncidentRetroExport            `json:"retro_exports,omitempty"`
	RoleAssignments         []IncidentsRoleAssignment        `json:"role_assignments,omitempty"`
	Services                []Succinct                       `json:"services,omitempty"`
	Severity                *string                          `json:"severity,omitempty"`
	SeverityColor           *string                          `json:"severity_color,omitempty"`
	SeverityCondition       *string                          `json:"severity_condition,omitempty"`
	SeverityConditionObject *NullableSeverityMatrixCondition `json:"severity_condition_object,omitempty"`
	SeverityImpact          *string                          `json:"severity_impact,omitempty"`
	SeverityImpactObject    *NullableSeverityMatrixImpact    `json:"severity_impact_object,omitempty"`
	// The time the incident started
	StartedAt       *time.Time                    `json:"started_at,omitempty"`
	StatusPages     []IncidentsStatusPage         `json:"status_pages,omitempty"`
	Summary         *string                       `json:"summary,omitempty"`
	TagList         []string                      `json:"tag_list,omitempty"`
	TeamAssignments []IncidentsTeamAssignmentLite `json:"team_assignments,omitempty"`
	Ticket          *NullableTicketingTicket      `json:"ticket,omitempty"`
}

func (i Incident) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *Incident) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Incident) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *Incident) GetAiIncidentSummary() *string {
	if o == nil {
		return nil
	}
	return o.AiIncidentSummary
}

func (o *Incident) GetChannelID() *string {
	if o == nil {
		return nil
	}
	return o.ChannelID
}

func (o *Incident) GetChannelName() *string {
	if o == nil {
		return nil
	}
	return o.ChannelName
}

func (o *Incident) GetChannelReference() *string {
	if o == nil {
		return nil
	}
	return o.ChannelReference
}

func (o *Incident) GetChannelStatus() *string {
	if o == nil {
		return nil
	}
	return o.ChannelStatus
}

func (o *Incident) GetConferenceBridges() []IncidentsConferenceBridge {
	if o == nil {
		return nil
	}
	return o.ConferenceBridges
}

func (o *Incident) GetContextObject() *NullableIncidentsContextObject {
	if o == nil {
		return nil
	}
	return o.ContextObject
}

func (o *Incident) GetConversations() []ConversationsAPIReference {
	if o == nil {
		return nil
	}
	return o.Conversations
}

func (o *Incident) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Incident) GetCreatedBy() *NullableAuthor {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *Incident) GetCurrentMilestone() *string {
	if o == nil {
		return nil
	}
	return o.CurrentMilestone
}

func (o *Incident) GetCustomFields() []CustomFieldsFieldValue {
	if o == nil {
		return nil
	}
	return o.CustomFields
}

func (o *Incident) GetCustomerImpactSummary() *string {
	if o == nil {
		return nil
	}
	return o.CustomerImpactSummary
}

func (o *Incident) GetCustomersImpacted() *int {
	if o == nil {
		return nil
	}
	return o.CustomersImpacted
}

func (o *Incident) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Incident) GetDiscardedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DiscardedAt
}

func (o *Incident) GetEnvironments() []Succinct {
	if o == nil {
		return nil
	}
	return o.Environments
}

func (o *Incident) GetFieldRequirements() []IncidentFieldRequirement {
	if o == nil {
		return nil
	}
	return o.FieldRequirements
}

func (o *Incident) GetFunctionalities() []Succinct {
	if o == nil {
		return nil
	}
	return o.Functionalities
}

func (o *Incident) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Incident) GetImpacts() []IncidentsImpact {
	if o == nil {
		return nil
	}
	return o.Impacts
}

func (o *Incident) GetIncidentChannels() []IncidentsChannel {
	if o == nil {
		return nil
	}
	return o.IncidentChannels
}

func (o *Incident) GetIncidentTickets() []TicketingTicket {
	if o == nil {
		return nil
	}
	return o.IncidentTickets
}

func (o *Incident) GetIncidentType() *NullableSuccinct {
	if o == nil {
		return nil
	}
	return o.IncidentType
}

func (o *Incident) GetIncidentURL() *string {
	if o == nil {
		return nil
	}
	return o.IncidentURL
}

func (o *Incident) GetLabels() *IncidentLabels {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *Incident) GetLastNote() *NullableEventNote {
	if o == nil {
		return nil
	}
	return o.LastNote
}

func (o *Incident) GetLastUpdate() *string {
	if o == nil {
		return nil
	}
	return o.LastUpdate
}

func (o *Incident) GetLifecycleMeasurements() []IncidentsLifecycleMeasurement {
	if o == nil {
		return nil
	}
	return o.LifecycleMeasurements
}

func (o *Incident) GetLifecyclePhases() []IncidentsLifecyclePhase {
	if o == nil {
		return nil
	}
	return o.LifecyclePhases
}

func (o *Incident) GetMilestones() []IncidentsMilestone {
	if o == nil {
		return nil
	}
	return o.Milestones
}

func (o *Incident) GetMonetaryImpact() *int {
	if o == nil {
		return nil
	}
	return o.MonetaryImpact
}

func (o *Incident) GetMonetaryImpactCents() *int {
	if o == nil {
		return nil
	}
	return o.MonetaryImpactCents
}

func (o *Incident) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Incident) GetNumber() *int {
	if o == nil {
		return nil
	}
	return o.Number
}

func (o *Incident) GetOrganization() *NullableOrganization {
	if o == nil {
		return nil
	}
	return o.Organization
}

func (o *Incident) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *Incident) GetPriority() *string {
	if o == nil {
		return nil
	}
	return o.Priority
}

func (o *Incident) GetPrivateID() *string {
	if o == nil {
		return nil
	}
	return o.PrivateID
}

func (o *Incident) GetPrivateStatusPageURL() *string {
	if o == nil {
		return nil
	}
	return o.PrivateStatusPageURL
}

func (o *Incident) GetReportID() *string {
	if o == nil {
		return nil
	}
	return o.ReportID
}

func (o *Incident) GetRetroExports() []IncidentRetroExport {
	if o == nil {
		return nil
	}
	return o.RetroExports
}

func (o *Incident) GetRoleAssignments() []IncidentsRoleAssignment {
	if o == nil {
		return nil
	}
	return o.RoleAssignments
}

func (o *Incident) GetServices() []Succinct {
	if o == nil {
		return nil
	}
	return o.Services
}

func (o *Incident) GetSeverity() *string {
	if o == nil {
		return nil
	}
	return o.Severity
}

func (o *Incident) GetSeverityColor() *string {
	if o == nil {
		return nil
	}
	return o.SeverityColor
}

func (o *Incident) GetSeverityCondition() *string {
	if o == nil {
		return nil
	}
	return o.SeverityCondition
}

func (o *Incident) GetSeverityConditionObject() *NullableSeverityMatrixCondition {
	if o == nil {
		return nil
	}
	return o.SeverityConditionObject
}

func (o *Incident) GetSeverityImpact() *string {
	if o == nil {
		return nil
	}
	return o.SeverityImpact
}

func (o *Incident) GetSeverityImpactObject() *NullableSeverityMatrixImpact {
	if o == nil {
		return nil
	}
	return o.SeverityImpactObject
}

func (o *Incident) GetStartedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartedAt
}

func (o *Incident) GetStatusPages() []IncidentsStatusPage {
	if o == nil {
		return nil
	}
	return o.StatusPages
}

func (o *Incident) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}

func (o *Incident) GetTagList() []string {
	if o == nil {
		return nil
	}
	return o.TagList
}

func (o *Incident) GetTeamAssignments() []IncidentsTeamAssignmentLite {
	if o == nil {
		return nil
	}
	return o.TeamAssignments
}

func (o *Incident) GetTicket() *NullableTicketingTicket {
	if o == nil {
		return nil
	}
	return o.Ticket
}
