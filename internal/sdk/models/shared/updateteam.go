// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type UpdateTeamMembershipsInput struct {
	// An incident role ID that this user will automatically assigned if this team is assigned to an incident
	IncidentRoleID *string `json:"incident_role_id,omitempty"`
	// The ID of a third-party on-call schedule to add to the team, allowing you to specify that whoever is on call for this schedule when the team is assigned to an incident gets added to the incident and optionally assigned to the configured incident role. This parameter is mutually exclusive with user_id and signals_on_call_schedule_id.
	ScheduleID *string `json:"schedule_id,omitempty"`
	// The ID of a Signals on-call schedule to add to the team, allowing you to specify that whoever is on call for this schedule when the team is assigned to an incident gets added to the incident and optionally assigned to the configured incident role.. This parameter is mutually exclusive with user_id and schedule_id.
	SignalsOnCallScheduleID *string `json:"signals_on_call_schedule_id,omitempty"`
	// The ID of a user to add to the team. This parameter is mutually exclusive with schedule_id and signals_on_call_schedule_id.
	UserID *string `json:"user_id,omitempty"`
}

func (o *UpdateTeamMembershipsInput) GetIncidentRoleID() *string {
	if o == nil {
		return nil
	}
	return o.IncidentRoleID
}

func (o *UpdateTeamMembershipsInput) GetScheduleID() *string {
	if o == nil {
		return nil
	}
	return o.ScheduleID
}

func (o *UpdateTeamMembershipsInput) GetSignalsOnCallScheduleID() *string {
	if o == nil {
		return nil
	}
	return o.SignalsOnCallScheduleID
}

func (o *UpdateTeamMembershipsInput) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

// UpdateTeamMsTeamsChannelInput - MS Teams channel identity for channel associated with this team
type UpdateTeamMsTeamsChannelInput struct {
	ChannelID string `json:"channel_id"`
	MsTeamID  string `json:"ms_team_id"`
}

func (o *UpdateTeamMsTeamsChannelInput) GetChannelID() string {
	if o == nil {
		return ""
	}
	return o.ChannelID
}

func (o *UpdateTeamMsTeamsChannelInput) GetMsTeamID() string {
	if o == nil {
		return ""
	}
	return o.MsTeamID
}

// UpdateTeam - Update a single team from its ID
type UpdateTeam struct {
	Description *string `json:"description,omitempty"`
	// A list of email addresses to invite to join the organization and automatically add to this team. If an email already has a pending invitation, the team will be added to their existing invitation.
	InviteEmails     []string                     `json:"invite_emails,omitempty"`
	MembershipsInput []UpdateTeamMembershipsInput `json:"memberships,omitempty"`
	// MS Teams channel identity for channel associated with this team
	MsTeamsChannelInput *UpdateTeamMsTeamsChannelInput `json:"ms_teams_channel,omitempty"`
	Name                *string                        `json:"name,omitempty"`
	// The Slack channel ID associated with this team. This may be the reference in FireHydrant's system (i.e. UUID) or the ID value from Slack (e.g. C1234567890).
	//
	SlackChannelID *string `json:"slack_channel_id,omitempty"`
	Slug           *string `json:"slug,omitempty"`
}

func (o *UpdateTeam) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateTeam) GetInviteEmails() []string {
	if o == nil {
		return nil
	}
	return o.InviteEmails
}

func (o *UpdateTeam) GetMembershipsInput() []UpdateTeamMembershipsInput {
	if o == nil {
		return nil
	}
	return o.MembershipsInput
}

func (o *UpdateTeam) GetMsTeamsChannelInput() *UpdateTeamMsTeamsChannelInput {
	if o == nil {
		return nil
	}
	return o.MsTeamsChannelInput
}

func (o *UpdateTeam) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateTeam) GetSlackChannelID() *string {
	if o == nil {
		return nil
	}
	return o.SlackChannelID
}

func (o *UpdateTeam) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}
