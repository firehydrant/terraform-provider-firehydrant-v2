// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IntegrationsAwsConnectionEntityConnectionStatus string

const (
	IntegrationsAwsConnectionEntityConnectionStatusPendingSetup       IntegrationsAwsConnectionEntityConnectionStatus = "pending_setup"
	IntegrationsAwsConnectionEntityConnectionStatusRoleAssumed        IntegrationsAwsConnectionEntityConnectionStatus = "role_assumed"
	IntegrationsAwsConnectionEntityConnectionStatusCantAssumeRole     IntegrationsAwsConnectionEntityConnectionStatus = "cant_assume_role"
	IntegrationsAwsConnectionEntityConnectionStatusInvalidPermissions IntegrationsAwsConnectionEntityConnectionStatus = "invalid_permissions"
	IntegrationsAwsConnectionEntityConnectionStatusValidated          IntegrationsAwsConnectionEntityConnectionStatus = "validated"
)

func (e IntegrationsAwsConnectionEntityConnectionStatus) ToPointer() *IntegrationsAwsConnectionEntityConnectionStatus {
	return &e
}
func (e *IntegrationsAwsConnectionEntityConnectionStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending_setup":
		fallthrough
	case "role_assumed":
		fallthrough
	case "cant_assume_role":
		fallthrough
	case "invalid_permissions":
		fallthrough
	case "validated":
		*e = IntegrationsAwsConnectionEntityConnectionStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IntegrationsAwsConnectionEntityConnectionStatus: %v", v)
	}
}

// IntegrationsAwsConnectionEntity - Integrations_Aws_ConnectionEntity model
type IntegrationsAwsConnectionEntity struct {
	ID                *string                                          `json:"id,omitempty"`
	AwsAccountID      *string                                          `json:"aws_account_id,omitempty"`
	TargetArn         *string                                          `json:"target_arn,omitempty"`
	ExternalID        *string                                          `json:"external_id,omitempty"`
	ConnectionStatus  *IntegrationsAwsConnectionEntityConnectionStatus `json:"connection_status,omitempty"`
	StatusText        *string                                          `json:"status_text,omitempty"`
	StatusDescription *string                                          `json:"status_description,omitempty"`
	EnvironmentID     *string                                          `json:"environment_id,omitempty"`
	EnvironmentName   *string                                          `json:"environment_name,omitempty"`
	Regions           []string                                         `json:"regions,omitempty"`
}

func (o *IntegrationsAwsConnectionEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *IntegrationsAwsConnectionEntity) GetAwsAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AwsAccountID
}

func (o *IntegrationsAwsConnectionEntity) GetTargetArn() *string {
	if o == nil {
		return nil
	}
	return o.TargetArn
}

func (o *IntegrationsAwsConnectionEntity) GetExternalID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalID
}

func (o *IntegrationsAwsConnectionEntity) GetConnectionStatus() *IntegrationsAwsConnectionEntityConnectionStatus {
	if o == nil {
		return nil
	}
	return o.ConnectionStatus
}

func (o *IntegrationsAwsConnectionEntity) GetStatusText() *string {
	if o == nil {
		return nil
	}
	return o.StatusText
}

func (o *IntegrationsAwsConnectionEntity) GetStatusDescription() *string {
	if o == nil {
		return nil
	}
	return o.StatusDescription
}

func (o *IntegrationsAwsConnectionEntity) GetEnvironmentID() *string {
	if o == nil {
		return nil
	}
	return o.EnvironmentID
}

func (o *IntegrationsAwsConnectionEntity) GetEnvironmentName() *string {
	if o == nil {
		return nil
	}
	return o.EnvironmentName
}

func (o *IntegrationsAwsConnectionEntity) GetRegions() []string {
	if o == nil {
		return nil
	}
	return o.Regions
}
