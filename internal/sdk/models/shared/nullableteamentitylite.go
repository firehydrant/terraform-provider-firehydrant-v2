// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type NullableTeamEntityLite struct {
	CreatedAt      *time.Time            `json:"created_at,omitempty"`
	CreatedBy      *NullableAuthorEntity `json:"created_by,omitempty"`
	Description    *string               `json:"description,omitempty"`
	ID             *string               `json:"id,omitempty"`
	InSupportHours *bool                 `json:"in_support_hours,omitempty"`
	Name           *string               `json:"name,omitempty"`
	SignalsIcalURL *string               `json:"signals_ical_url,omitempty"`
	Slug           *string               `json:"slug,omitempty"`
	UpdatedAt      *time.Time            `json:"updated_at,omitempty"`
}

func (n NullableTeamEntityLite) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *NullableTeamEntityLite) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *NullableTeamEntityLite) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *NullableTeamEntityLite) GetCreatedBy() *NullableAuthorEntity {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *NullableTeamEntityLite) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *NullableTeamEntityLite) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *NullableTeamEntityLite) GetInSupportHours() *bool {
	if o == nil {
		return nil
	}
	return o.InSupportHours
}

func (o *NullableTeamEntityLite) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *NullableTeamEntityLite) GetSignalsIcalURL() *string {
	if o == nil {
		return nil
	}
	return o.SignalsIcalURL
}

func (o *NullableTeamEntityLite) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *NullableTeamEntityLite) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
