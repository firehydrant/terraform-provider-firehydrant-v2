// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type ChangeEventEntityAttachment struct {
}

// ChangeEventEntity model
type ChangeEventEntity struct {
	// A list of objects attached to this item. Can be one of: LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity
	Attachments     []ChangeEventEntityAttachment `json:"attachments,omitempty"`
	Authors         []AuthorEntity                `json:"authors,omitempty"`
	Description     *string                       `json:"description,omitempty"`
	DurationIso8601 *string                       `json:"duration_iso8601,omitempty"`
	DurationMs      *int                          `json:"duration_ms,omitempty"`
	EndsAt          *time.Time                    `json:"ends_at,omitempty"`
	Environments    []EnvironmentEntryEntity      `json:"environments,omitempty"`
	ExternalID      *string                       `json:"external_id,omitempty"`
	ID              *string                       `json:"id,omitempty"`
	Identities      []ChangeIdentityEntity        `json:"identities,omitempty"`
	// An object of label key and values
	Labels         map[string]any      `json:"labels,omitempty"`
	RelatedChanges []ChangeEntity      `json:"related_changes,omitempty"`
	Services       []ServiceEntityLite `json:"services,omitempty"`
	StartsAt       *time.Time          `json:"starts_at,omitempty"`
	Summary        *string             `json:"summary,omitempty"`
	UpdatedAt      *time.Time          `json:"updated_at,omitempty"`
}

func (c ChangeEventEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ChangeEventEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ChangeEventEntity) GetAttachments() []ChangeEventEntityAttachment {
	if o == nil {
		return nil
	}
	return o.Attachments
}

func (o *ChangeEventEntity) GetAuthors() []AuthorEntity {
	if o == nil {
		return nil
	}
	return o.Authors
}

func (o *ChangeEventEntity) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ChangeEventEntity) GetDurationIso8601() *string {
	if o == nil {
		return nil
	}
	return o.DurationIso8601
}

func (o *ChangeEventEntity) GetDurationMs() *int {
	if o == nil {
		return nil
	}
	return o.DurationMs
}

func (o *ChangeEventEntity) GetEndsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndsAt
}

func (o *ChangeEventEntity) GetEnvironments() []EnvironmentEntryEntity {
	if o == nil {
		return nil
	}
	return o.Environments
}

func (o *ChangeEventEntity) GetExternalID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalID
}

func (o *ChangeEventEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ChangeEventEntity) GetIdentities() []ChangeIdentityEntity {
	if o == nil {
		return nil
	}
	return o.Identities
}

func (o *ChangeEventEntity) GetLabels() map[string]any {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *ChangeEventEntity) GetRelatedChanges() []ChangeEntity {
	if o == nil {
		return nil
	}
	return o.RelatedChanges
}

func (o *ChangeEventEntity) GetServices() []ServiceEntityLite {
	if o == nil {
		return nil
	}
	return o.Services
}

func (o *ChangeEventEntity) GetStartsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartsAt
}

func (o *ChangeEventEntity) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}

func (o *ChangeEventEntity) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
