// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

// AudiencesEntitiesAudienceEntity - Audiences_Entities_AudienceEntity model
type AudiencesEntitiesAudienceEntity struct {
	// Unique identifier for the audience
	ID *string `json:"id,omitempty"`
	// Name of the audience (maximum 255 characters)
	Name *string `json:"name,omitempty"`
	// Slug of the audience, unique and autogenerated
	Slug *string `json:"slug,omitempty"`
	// Description of the audience and its purpose (maximum 4000 characters)
	Description *string `json:"description,omitempty"`
	// Whether this is the organization's default audience
	Default *bool `json:"default,omitempty"`
	// When the audience was created
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// When the audience was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// When the audience was discarded (soft deleted)
	DiscardedAt *time.Time `json:"discarded_at,omitempty"`
	// List of incident details for this audience
	Details []AudiencesEntitiesDetailEntity `json:"details,omitempty"`
}

func (a AudiencesEntitiesAudienceEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AudiencesEntitiesAudienceEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AudiencesEntitiesAudienceEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AudiencesEntitiesAudienceEntity) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AudiencesEntitiesAudienceEntity) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *AudiencesEntitiesAudienceEntity) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *AudiencesEntitiesAudienceEntity) GetDefault() *bool {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *AudiencesEntitiesAudienceEntity) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *AudiencesEntitiesAudienceEntity) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *AudiencesEntitiesAudienceEntity) GetDiscardedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DiscardedAt
}

func (o *AudiencesEntitiesAudienceEntity) GetDetails() []AudiencesEntitiesDetailEntity {
	if o == nil {
		return nil
	}
	return o.Details
}
