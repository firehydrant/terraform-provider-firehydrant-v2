// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

// IncidentsRelatedChangeEventEntity - Incidents_RelatedChangeEventEntity model
type IncidentsRelatedChangeEventEntity struct {
	ChangeEvent *NullableChangeEventEntity `json:"change_event,omitempty"`
	CreatedAt   *time.Time                 `json:"created_at,omitempty"`
	CreatedBy   *NullableAuthorEntity      `json:"created_by,omitempty"`
	ID          *string                    `json:"id,omitempty"`
	IncidentID  *string                    `json:"incident_id,omitempty"`
	Type        *string                    `json:"type,omitempty"`
	UpdatedAt   *time.Time                 `json:"updated_at,omitempty"`
	// The reason why this change event is related to this incident
	Why *string `json:"why,omitempty"`
}

func (i IncidentsRelatedChangeEventEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IncidentsRelatedChangeEventEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *IncidentsRelatedChangeEventEntity) GetChangeEvent() *NullableChangeEventEntity {
	if o == nil {
		return nil
	}
	return o.ChangeEvent
}

func (o *IncidentsRelatedChangeEventEntity) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *IncidentsRelatedChangeEventEntity) GetCreatedBy() *NullableAuthorEntity {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *IncidentsRelatedChangeEventEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *IncidentsRelatedChangeEventEntity) GetIncidentID() *string {
	if o == nil {
		return nil
	}
	return o.IncidentID
}

func (o *IncidentsRelatedChangeEventEntity) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *IncidentsRelatedChangeEventEntity) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *IncidentsRelatedChangeEventEntity) GetWhy() *string {
	if o == nil {
		return nil
	}
	return o.Why
}
