// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TicketType string

const (
	TicketTypeIncident TicketType = "incident"
	TicketTypeTask     TicketType = "task"
	TicketTypeFollowUp TicketType = "follow_up"
)

func (e TicketType) ToPointer() *TicketType {
	return &e
}
func (e *TicketType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "incident":
		fallthrough
	case "task":
		fallthrough
	case "follow_up":
		*e = TicketType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TicketType: %v", v)
	}
}

// TicketingProjectInboundFieldMapEntity - Ticketing_ProjectInboundFieldMapEntity model
type TicketingProjectInboundFieldMapEntity struct {
	ID                 *string     `json:"id,omitempty"`
	ConnectionID       *string     `json:"connection_id,omitempty"`
	ConnectionType     *string     `json:"connection_type,omitempty"`
	TicketingProjectID *string     `json:"ticketing_project_id,omitempty"`
	ExternalFieldName  *string     `json:"external_field_name,omitempty"`
	InternalFieldName  *string     `json:"internal_field_name,omitempty"`
	TicketType         *TicketType `json:"ticket_type,omitempty"`
}

func (o *TicketingProjectInboundFieldMapEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TicketingProjectInboundFieldMapEntity) GetConnectionID() *string {
	if o == nil {
		return nil
	}
	return o.ConnectionID
}

func (o *TicketingProjectInboundFieldMapEntity) GetConnectionType() *string {
	if o == nil {
		return nil
	}
	return o.ConnectionType
}

func (o *TicketingProjectInboundFieldMapEntity) GetTicketingProjectID() *string {
	if o == nil {
		return nil
	}
	return o.TicketingProjectID
}

func (o *TicketingProjectInboundFieldMapEntity) GetExternalFieldName() *string {
	if o == nil {
		return nil
	}
	return o.ExternalFieldName
}

func (o *TicketingProjectInboundFieldMapEntity) GetInternalFieldName() *string {
	if o == nil {
		return nil
	}
	return o.InternalFieldName
}

func (o *TicketingProjectInboundFieldMapEntity) GetTicketType() *TicketType {
	if o == nil {
		return nil
	}
	return o.TicketType
}
