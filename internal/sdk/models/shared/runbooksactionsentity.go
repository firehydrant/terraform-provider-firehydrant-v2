// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type RunbooksActionsEntityDefaultRuleData struct {
}

type RunbooksActionsEntityPrerequisite struct {
}

type RunbooksActionsEntity struct {
	Automatable           *bool                                  `json:"automatable,omitempty"`
	Category              *string                                `json:"category,omitempty"`
	Config                *NullableRunbooksActionConfigEntity    `json:"config,omitempty"`
	CreatedAt             *time.Time                             `json:"created_at,omitempty"`
	DefaultLogic          map[string]any                         `json:"default_logic,omitempty"`
	DefaultRuleData       *RunbooksActionsEntityDefaultRuleData  `json:"default_rule_data,omitempty"`
	Description           *string                                `json:"description,omitempty"`
	ID                    *string                                `json:"id,omitempty"`
	Integration           *NullableIntegrationsIntegrationEntity `json:"integration,omitempty"`
	Name                  *string                                `json:"name,omitempty"`
	Prerequisites         []RunbooksActionsEntityPrerequisite    `json:"prerequisites,omitempty"`
	Repeatable            *bool                                  `json:"repeatable,omitempty"`
	Rerunnable            *bool                                  `json:"rerunnable,omitempty"`
	Slug                  *string                                `json:"slug,omitempty"`
	SupportedRunbookTypes []string                               `json:"supported_runbook_types,omitempty"`
	UpdatedAt             *time.Time                             `json:"updated_at,omitempty"`
}

func (r RunbooksActionsEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RunbooksActionsEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RunbooksActionsEntity) GetAutomatable() *bool {
	if o == nil {
		return nil
	}
	return o.Automatable
}

func (o *RunbooksActionsEntity) GetCategory() *string {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *RunbooksActionsEntity) GetConfig() *NullableRunbooksActionConfigEntity {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *RunbooksActionsEntity) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *RunbooksActionsEntity) GetDefaultLogic() map[string]any {
	if o == nil {
		return nil
	}
	return o.DefaultLogic
}

func (o *RunbooksActionsEntity) GetDefaultRuleData() *RunbooksActionsEntityDefaultRuleData {
	if o == nil {
		return nil
	}
	return o.DefaultRuleData
}

func (o *RunbooksActionsEntity) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *RunbooksActionsEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RunbooksActionsEntity) GetIntegration() *NullableIntegrationsIntegrationEntity {
	if o == nil {
		return nil
	}
	return o.Integration
}

func (o *RunbooksActionsEntity) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *RunbooksActionsEntity) GetPrerequisites() []RunbooksActionsEntityPrerequisite {
	if o == nil {
		return nil
	}
	return o.Prerequisites
}

func (o *RunbooksActionsEntity) GetRepeatable() *bool {
	if o == nil {
		return nil
	}
	return o.Repeatable
}

func (o *RunbooksActionsEntity) GetRerunnable() *bool {
	if o == nil {
		return nil
	}
	return o.Rerunnable
}

func (o *RunbooksActionsEntity) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *RunbooksActionsEntity) GetSupportedRunbookTypes() []string {
	if o == nil {
		return nil
	}
	return o.SupportedRunbookTypes
}

func (o *RunbooksActionsEntity) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
