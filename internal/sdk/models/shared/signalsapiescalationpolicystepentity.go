// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type SignalsAPIEscalationPolicyStepEntity struct {
	// The distribution type for the step
	DistributionType        *string                         `json:"distribution_type,omitempty"`
	ID                      *string                         `json:"id,omitempty"`
	NextTargetForRoundRobin *NullableSignalsAPITargetEntity `json:"next_target_for_round_robin,omitempty"`
	ParentPosition          *int                            `json:"parent_position,omitempty"`
	Position                *int                            `json:"position,omitempty"`
	// The notification priorities that this step is assigned to. Valid values are HIGH, MEDIUM, and LOW.
	Priorities []string                 `json:"priorities,omitempty"`
	Targets    []SignalsAPITargetEntity `json:"targets,omitempty"`
	Timeout    *string                  `json:"timeout,omitempty"`
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetDistributionType() *string {
	if o == nil {
		return nil
	}
	return o.DistributionType
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetNextTargetForRoundRobin() *NullableSignalsAPITargetEntity {
	if o == nil {
		return nil
	}
	return o.NextTargetForRoundRobin
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetParentPosition() *int {
	if o == nil {
		return nil
	}
	return o.ParentPosition
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetPosition() *int {
	if o == nil {
		return nil
	}
	return o.Position
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetPriorities() []string {
	if o == nil {
		return nil
	}
	return o.Priorities
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetTargets() []SignalsAPITargetEntity {
	if o == nil {
		return nil
	}
	return o.Targets
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetTimeout() *string {
	if o == nil {
		return nil
	}
	return o.Timeout
}
